INFO  16:28:11,886 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  16:28:11,930 - #37 program
INFO  16:28:11,930 - #47 test302
INFO  16:28:11,930 - #9 const
INFO  16:28:11,931 - #47 int
INFO  16:28:11,932 - #47 jedan
INFO  16:28:11,932 - #4 =
INFO  16:28:11,932 - #48 1
INFO  16:28:11,933 - #43 ;
INFO  16:28:11,934 - #47 int
INFO  16:28:11,935 - #47 i
INFO  16:28:11,935 - #43 ;
INFO  16:28:11,936 - #47 bool
INFO  16:28:11,937 - #47 ibool
INFO  16:28:11,937 - #43 ;
INFO  16:28:11,938 - #47 int
INFO  16:28:11,938 - #47 niz2
INFO  16:28:11,938 - #43 ;
INFO  16:28:11,938 - #47 int
INFO  16:28:11,938 - #47 niz
INFO  16:28:11,938 - #28 [
INFO  16:28:11,938 - #42 ]
INFO  16:28:11,938 - #43 ;
INFO  16:28:11,942 - #47 int
INFO  16:28:11,942 - #47 a
INFO  16:28:11,943 - #8 ,
INFO  16:28:11,943 - #47 curr
INFO  16:28:11,943 - #43 ;
INFO  16:28:11,943 - #25 {
INFO  16:28:11,943 - #47 int
INFO  16:28:11,943 - #47 sum
INFO  16:28:11,944 - #26 (
INFO  16:28:11,944 - #47 int
INFO  16:28:11,944 - #47 z
INFO  16:28:11,944 - #8 ,
INFO  16:28:11,945 - #47 int
INFO  16:28:11,945 - #47 d
INFO  16:28:11,945 - #41 )
INFO  16:28:11,946 - #25 {
INFO  16:28:11,946 - #40 return
INFO  16:28:11,947 - #47 z
INFO  16:28:11,947 - #2 +
INFO  16:28:11,951 - #47 d
INFO  16:28:11,952 - #43 ;
INFO  16:28:11,952 - #38 }
INFO  16:28:11,952 - #47 int
INFO  16:28:11,952 - #47 inkrement
INFO  16:28:11,952 - #26 (
INFO  16:28:11,952 - #47 int
INFO  16:28:11,952 - #47 a
INFO  16:28:11,953 - #8 ,
INFO  16:28:11,953 - #47 int
INFO  16:28:11,953 - #47 inc
INFO  16:28:11,953 - #41 )
INFO  16:28:11,953 - #47 int
INFO  16:28:11,953 - #47 pom
INFO  16:28:11,953 - #43 ;
INFO  16:28:11,953 - #25 {
INFO  16:28:11,953 - #21 if
INFO  16:28:11,953 - #26 (
INFO  16:28:11,953 - #47 inc
INFO  16:28:11,953 - #16 ==
INFO  16:28:11,954 - #47 jedan
INFO  16:28:11,955 - #41 )
INFO  16:28:11,957 - #47 pom
INFO  16:28:11,957 - #4 =
INFO  16:28:11,957 - #48 1
INFO  16:28:11,957 - #43 ;
INFO  16:28:11,957 - #15 else
INFO  16:28:11,957 - #21 if
INFO  16:28:11,957 - #26 (
INFO  16:28:11,957 - #47 inc
INFO  16:28:11,958 - #16 ==
INFO  16:28:11,958 - #48 2
INFO  16:28:11,958 - #41 )
INFO  16:28:11,958 - #47 pom
INFO  16:28:11,958 - #4 =
INFO  16:28:11,958 - #47 a
INFO  16:28:11,958 - #43 ;
INFO  16:28:11,958 - #40 return
INFO  16:28:11,958 - #47 sum
INFO  16:28:11,959 - #26 (
INFO  16:28:11,959 - #47 a
INFO  16:28:11,959 - #8 ,
INFO  16:28:11,959 - #47 pom
INFO  16:28:11,959 - #41 )
INFO  16:28:11,960 - #43 ;
INFO  16:28:11,960 - #38 }
INFO  16:28:11,960 - #47 bool
INFO  16:28:11,960 - #47 verify
INFO  16:28:11,960 - #26 (
INFO  16:28:11,961 - #41 )
INFO  16:28:11,961 - #25 {
INFO  16:28:11,961 - #36 print
INFO  16:28:11,961 - #26 (
INFO  16:28:11,961 - #50 v
INFO  16:28:11,962 - #41 )
INFO  16:28:11,962 - #43 ;
INFO  16:28:11,962 - #40 return
INFO  16:28:11,962 - #49 false
INFO  16:28:11,962 - #43 ;
INFO  16:28:11,962 - #38 }
INFO  16:28:11,962 - #45 void
INFO  16:28:11,962 - #47 main
INFO  16:28:11,962 - #26 (
INFO  16:28:11,962 - #41 )
INFO  16:28:11,962 - #25 {
INFO  16:28:11,962 - #21 if
INFO  16:28:11,962 - #26 (
INFO  16:28:11,962 - #48 1
INFO  16:28:11,962 - #32 !=
INFO  16:28:11,962 - #48 1
INFO  16:28:11,963 - #41 )
INFO  16:28:11,963 - #36 print
INFO  16:28:11,963 - #26 (
INFO  16:28:11,963 - #44 -
INFO  16:28:11,963 - #48 6
INFO  16:28:11,963 - #41 )
INFO  16:28:11,964 - #43 ;
INFO  16:28:11,964 - #15 else
INFO  16:28:11,964 - #36 print
INFO  16:28:11,964 - #26 (
INFO  16:28:11,964 - #48 0
INFO  16:28:11,964 - #41 )
INFO  16:28:11,964 - #43 ;
INFO  16:28:11,964 - #47 ibool
INFO  16:28:11,964 - #4 =
INFO  16:28:11,964 - #49 false
INFO  16:28:11,964 - #43 ;
INFO  16:28:11,964 - #47 i
INFO  16:28:11,964 - #4 =
INFO  16:28:11,964 - #48 0
INFO  16:28:11,964 - #43 ;
INFO  16:28:11,964 - #46 while
INFO  16:28:11,964 - #26 (
INFO  16:28:11,964 - #47 i
INFO  16:28:11,964 - #27 <
INFO  16:28:11,964 - #48 5
INFO  16:28:11,965 - #41 )
INFO  16:28:11,965 - #25 {
INFO  16:28:11,965 - #21 if
INFO  16:28:11,965 - #26 (
INFO  16:28:11,965 - #47 i
INFO  16:28:11,965 - #16 ==
INFO  16:28:11,965 - #48 2
INFO  16:28:11,965 - #41 )
INFO  16:28:11,965 - #47 ibool
INFO  16:28:11,966 - #4 =
INFO  16:28:11,966 - #49 true
INFO  16:28:11,966 - #43 ;
INFO  16:28:11,966 - #47 i
INFO  16:28:11,966 - #23 ++
INFO  16:28:11,966 - #43 ;
INFO  16:28:11,966 - #38 }
INFO  16:28:11,966 - #21 if
INFO  16:28:11,966 - #26 (
INFO  16:28:11,966 - #47 ibool
INFO  16:28:11,966 - #41 )
INFO  16:28:11,966 - #21 if
INFO  16:28:11,966 - #26 (
INFO  16:28:11,966 - #47 i
INFO  16:28:11,966 - #16 ==
INFO  16:28:11,966 - #48 5
INFO  16:28:11,966 - #41 )
INFO  16:28:11,966 - #36 print
INFO  16:28:11,967 - #26 (
INFO  16:28:11,967 - #48 1
INFO  16:28:11,967 - #41 )
INFO  16:28:11,967 - #43 ;
INFO  16:28:11,967 - #15 else
INFO  16:28:11,967 - #36 print
INFO  16:28:11,967 - #26 (
INFO  16:28:11,967 - #44 -
INFO  16:28:11,967 - #48 1
INFO  16:28:11,967 - #41 )
INFO  16:28:11,967 - #43 ;
INFO  16:28:11,967 - #47 a
INFO  16:28:11,967 - #4 =
INFO  16:28:11,967 - #48 2
INFO  16:28:11,967 - #43 ;
INFO  16:28:11,967 - #47 niz
INFO  16:28:11,967 - #4 =
INFO  16:28:11,967 - #33 new
INFO  16:28:11,967 - #47 int
INFO  16:28:11,967 - #28 [
INFO  16:28:11,967 - #48 3
INFO  16:28:11,967 - #42 ]
INFO  16:28:11,967 - #43 ;
INFO  16:28:11,967 - #47 niz
INFO  16:28:11,968 - #28 [
INFO  16:28:11,968 - #48 0
INFO  16:28:11,968 - #42 ]
INFO  16:28:11,968 - #4 =
INFO  16:28:11,968 - #48 1
INFO  16:28:11,968 - #31 *
INFO  16:28:11,968 - #47 a
INFO  16:28:11,969 - #43 ;
INFO  16:28:11,969 - #47 niz
INFO  16:28:11,969 - #28 [
INFO  16:28:11,969 - #48 1
INFO  16:28:11,969 - #42 ]
INFO  16:28:11,969 - #4 =
INFO  16:28:11,969 - #48 2
INFO  16:28:11,969 - #31 *
INFO  16:28:11,969 - #47 a
INFO  16:28:11,969 - #43 ;
INFO  16:28:11,969 - #47 niz
INFO  16:28:11,969 - #28 [
INFO  16:28:11,969 - #48 2
INFO  16:28:11,969 - #42 ]
INFO  16:28:11,969 - #4 =
INFO  16:28:11,969 - #47 sum
INFO  16:28:11,969 - #26 (
INFO  16:28:11,969 - #47 niz
INFO  16:28:11,969 - #28 [
INFO  16:28:11,970 - #48 1
INFO  16:28:11,970 - #42 ]
INFO  16:28:11,970 - #8 ,
INFO  16:28:11,970 - #47 niz
INFO  16:28:11,970 - #28 [
INFO  16:28:11,970 - #48 0
INFO  16:28:11,970 - #42 ]
INFO  16:28:11,970 - #41 )
INFO  16:28:11,970 - #31 *
INFO  16:28:11,970 - #47 a
INFO  16:28:11,970 - #2 +
INFO  16:28:11,970 - #48 1
INFO  16:28:11,970 - #43 ;
INFO  16:28:11,970 - #21 if
INFO  16:28:11,970 - #26 (
INFO  16:28:11,970 - #47 verify
INFO  16:28:11,970 - #26 (
INFO  16:28:11,970 - #41 )
INFO  16:28:11,970 - #35 ||
INFO  16:28:11,970 - #47 niz
INFO  16:28:11,970 - #28 [
INFO  16:28:11,970 - #48 2
INFO  16:28:11,970 - #42 ]
INFO  16:28:11,970 - #16 ==
INFO  16:28:11,970 - #48 4
INFO  16:28:11,970 - #41 )
INFO  16:28:11,971 - #36 print
INFO  16:28:11,971 - #26 (
INFO  16:28:11,971 - #47 ord
INFO  16:28:11,971 - #26 (
INFO  16:28:11,971 - #50 A
INFO  16:28:11,971 - #41 )
INFO  16:28:11,971 - #41 )
INFO  16:28:11,971 - #43 ;
INFO  16:28:11,971 - #15 else
INFO  16:28:11,971 - #36 print
INFO  16:28:11,971 - #26 (
INFO  16:28:11,971 - #47 ord
INFO  16:28:11,971 - #26 (
INFO  16:28:11,971 - #50 a
INFO  16:28:11,971 - #41 )
INFO  16:28:11,971 - #41 )
INFO  16:28:11,971 - #43 ;
INFO  16:28:11,971 - #36 print
INFO  16:28:11,971 - #26 (
INFO  16:28:11,971 - #47 eol
INFO  16:28:11,971 - #41 )
INFO  16:28:11,971 - #43 ;
INFO  16:28:11,971 - #47 i
INFO  16:28:11,971 - #4 =
INFO  16:28:11,971 - #48 0
INFO  16:28:11,971 - #43 ;
INFO  16:28:11,971 - #46 while
INFO  16:28:11,971 - #26 (
INFO  16:28:11,971 - #47 i
INFO  16:28:11,971 - #27 <
INFO  16:28:11,971 - #48 10
INFO  16:28:11,971 - #41 )
INFO  16:28:11,972 - #25 {
INFO  16:28:11,972 - #21 if
INFO  16:28:11,972 - #26 (
INFO  16:28:11,972 - #47 i
INFO  16:28:11,972 - #16 ==
INFO  16:28:11,972 - #48 3
INFO  16:28:11,972 - #41 )
INFO  16:28:11,972 - #25 {
INFO  16:28:11,972 - #47 i
INFO  16:28:11,972 - #23 ++
INFO  16:28:11,972 - #43 ;
INFO  16:28:11,972 - #10 continue
INFO  16:28:11,972 - #43 ;
INFO  16:28:11,972 - #38 }
INFO  16:28:11,973 - #21 if
INFO  16:28:11,973 - #26 (
INFO  16:28:11,973 - #47 i
INFO  16:28:11,973 - #16 ==
INFO  16:28:11,973 - #48 4
INFO  16:28:11,973 - #41 )
INFO  16:28:11,973 - #5 break
INFO  16:28:11,973 - #43 ;
INFO  16:28:11,973 - #47 i
INFO  16:28:11,973 - #4 =
INFO  16:28:11,973 - #47 inkrement
INFO  16:28:11,973 - #26 (
INFO  16:28:11,974 - #47 i
INFO  16:28:11,974 - #8 ,
INFO  16:28:11,974 - #48 1
INFO  16:28:11,974 - #41 )
INFO  16:28:11,974 - #43 ;
INFO  16:28:11,974 - #38 }
INFO  16:28:11,974 - #21 if
INFO  16:28:11,974 - #26 (
INFO  16:28:11,974 - #47 i
INFO  16:28:11,974 - #16 ==
INFO  16:28:11,974 - #48 3
INFO  16:28:11,974 - #3 &&
INFO  16:28:11,974 - #47 verify
INFO  16:28:11,974 - #26 (
INFO  16:28:11,974 - #41 )
INFO  16:28:11,974 - #41 )
INFO  16:28:11,974 - #36 print
INFO  16:28:11,974 - #26 (
INFO  16:28:11,974 - #44 -
INFO  16:28:11,974 - #48 4
INFO  16:28:11,974 - #41 )
INFO  16:28:11,974 - #43 ;
INFO  16:28:11,974 - #15 else
INFO  16:28:11,974 - #36 print
INFO  16:28:11,974 - #26 (
INFO  16:28:11,974 - #48 4
INFO  16:28:11,974 - #41 )
INFO  16:28:11,974 - #43 ;
INFO  16:28:11,974 - #39 read
INFO  16:28:11,974 - #26 (
INFO  16:28:11,975 - #47 niz
INFO  16:28:11,975 - #28 [
INFO  16:28:11,975 - #48 0
INFO  16:28:11,975 - #42 ]
INFO  16:28:11,975 - #41 )
INFO  16:28:11,975 - #43 ;
INFO  16:28:11,975 - #39 read
INFO  16:28:11,975 - #26 (
INFO  16:28:11,975 - #47 niz
INFO  16:28:11,975 - #28 [
INFO  16:28:11,975 - #48 1
INFO  16:28:11,975 - #42 ]
INFO  16:28:11,975 - #41 )
INFO  16:28:11,975 - #43 ;
INFO  16:28:11,975 - #39 read
INFO  16:28:11,975 - #26 (
INFO  16:28:11,976 - #47 niz
INFO  16:28:11,976 - #28 [
INFO  16:28:11,976 - #48 2
INFO  16:28:11,976 - #42 ]
INFO  16:28:11,976 - #41 )
INFO  16:28:11,976 - #43 ;
INFO  16:28:11,976 - #36 print
INFO  16:28:11,976 - #26 (
INFO  16:28:11,976 - #47 eol
INFO  16:28:11,976 - #41 )
INFO  16:28:11,976 - #43 ;
INFO  16:28:11,976 - #36 print
INFO  16:28:11,976 - #26 (
INFO  16:28:11,976 - #47 sum
INFO  16:28:11,976 - #26 (
INFO  16:28:11,976 - #47 sum
INFO  16:28:11,976 - #26 (
INFO  16:28:11,976 - #47 niz
INFO  16:28:11,976 - #28 [
INFO  16:28:11,976 - #48 0
INFO  16:28:11,976 - #42 ]
INFO  16:28:11,976 - #8 ,
INFO  16:28:11,977 - #47 niz
INFO  16:28:11,977 - #28 [
INFO  16:28:11,977 - #48 1
INFO  16:28:11,977 - #42 ]
INFO  16:28:11,977 - #41 )
INFO  16:28:11,977 - #8 ,
INFO  16:28:11,977 - #47 niz
INFO  16:28:11,977 - #28 [
INFO  16:28:11,977 - #48 2
INFO  16:28:11,977 - #42 ]
INFO  16:28:11,977 - #41 )
INFO  16:28:11,977 - #41 )
INFO  16:28:11,977 - #43 ;
INFO  16:28:11,977 - #36 print
INFO  16:28:11,977 - #26 (
INFO  16:28:11,977 - #47 eol
INFO  16:28:11,977 - #41 )
INFO  16:28:11,977 - #43 ;
INFO  16:28:11,977 - #36 print
INFO  16:28:11,977 - #26 (
INFO  16:28:11,977 - #47 inkrement
INFO  16:28:11,977 - #26 (
INFO  16:28:11,978 - #47 niz
INFO  16:28:11,978 - #28 [
INFO  16:28:11,978 - #48 2
INFO  16:28:11,978 - #42 ]
INFO  16:28:11,978 - #8 ,
INFO  16:28:11,978 - #48 2
INFO  16:28:11,978 - #41 )
INFO  16:28:11,978 - #41 )
INFO  16:28:11,978 - #43 ;
INFO  16:28:11,978 - #47 a
INFO  16:28:11,978 - #4 =
INFO  16:28:11,978 - #48 3
INFO  16:28:11,978 - #43 ;
INFO  16:28:11,978 - #47 i
INFO  16:28:11,978 - #4 =
INFO  16:28:11,978 - #48 0
INFO  16:28:11,978 - #43 ;
INFO  16:28:11,978 - #46 while
INFO  16:28:11,978 - #26 (
INFO  16:28:11,978 - #47 i
INFO  16:28:11,978 - #27 <
INFO  16:28:11,978 - #48 3
INFO  16:28:11,978 - #41 )
INFO  16:28:11,978 - #25 {
INFO  16:28:11,978 - #47 niz
INFO  16:28:11,978 - #28 [
INFO  16:28:11,978 - #47 i
INFO  16:28:11,978 - #42 ]
INFO  16:28:11,978 - #4 =
INFO  16:28:11,978 - #47 niz
INFO  16:28:11,978 - #28 [
INFO  16:28:11,978 - #47 i
INFO  16:28:11,979 - #42 ]
INFO  16:28:11,979 - #31 *
INFO  16:28:11,979 - #48 2
INFO  16:28:11,979 - #31 *
INFO  16:28:11,979 - #47 a
INFO  16:28:11,979 - #43 ;
INFO  16:28:11,979 - #47 i
INFO  16:28:11,979 - #23 ++
INFO  16:28:11,979 - #43 ;
INFO  16:28:11,979 - #38 }
INFO  16:28:11,979 - #47 niz
INFO  16:28:11,979 - #14 .
INFO  16:28:11,979 - #18 foreach
ERROR 16:28:11,979 - 
Sintaksna greska na liniji 92
ERROR 16:28:11,979 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 92
