INFO  16:17:21,994 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  16:17:22,043 - #37 program
INFO  16:17:22,043 - #47 test302
INFO  16:17:22,043 - #9 const
INFO  16:17:22,044 - #47 int
INFO  16:17:22,044 - #47 jedan
INFO  16:17:22,045 - #4 =
INFO  16:17:22,045 - #48 1
INFO  16:17:22,046 - #43 ;
INFO  16:17:22,047 - #47 int
INFO  16:17:22,047 - #47 i
INFO  16:17:22,048 - #43 ;
INFO  16:17:22,049 - #47 bool
INFO  16:17:22,050 - #47 ibool
INFO  16:17:22,050 - #43 ;
INFO  16:17:22,050 - #47 int
INFO  16:17:22,050 - #47 niz2
INFO  16:17:22,050 - #43 ;
INFO  16:17:22,050 - #47 int
INFO  16:17:22,050 - #47 niz
INFO  16:17:22,050 - #28 [
INFO  16:17:22,050 - #42 ]
INFO  16:17:22,050 - #43 ;
INFO  16:17:22,055 - #47 int
INFO  16:17:22,055 - #47 a
INFO  16:17:22,055 - #8 ,
INFO  16:17:22,055 - #47 curr
INFO  16:17:22,055 - #43 ;
INFO  16:17:22,055 - #25 {
INFO  16:17:22,055 - #47 int
INFO  16:17:22,056 - #47 sum
INFO  16:17:22,056 - #26 (
INFO  16:17:22,056 - #47 int
INFO  16:17:22,056 - #47 z
INFO  16:17:22,056 - #8 ,
INFO  16:17:22,057 - #47 int
INFO  16:17:22,057 - #47 d
INFO  16:17:22,057 - #41 )
INFO  16:17:22,058 - #25 {
INFO  16:17:22,059 - #40 return
INFO  16:17:22,059 - #47 z
INFO  16:17:22,060 - #2 +
INFO  16:17:22,063 - #47 d
INFO  16:17:22,064 - #43 ;
INFO  16:17:22,065 - #38 }
INFO  16:17:22,065 - #47 int
INFO  16:17:22,065 - #47 inkrement
INFO  16:17:22,065 - #26 (
INFO  16:17:22,065 - #47 int
INFO  16:17:22,065 - #47 a
INFO  16:17:22,065 - #8 ,
INFO  16:17:22,065 - #47 int
INFO  16:17:22,065 - #47 inc
INFO  16:17:22,065 - #41 )
INFO  16:17:22,066 - #47 int
INFO  16:17:22,066 - #47 pom
INFO  16:17:22,066 - #43 ;
INFO  16:17:22,066 - #25 {
INFO  16:17:22,066 - #21 if
INFO  16:17:22,066 - #26 (
INFO  16:17:22,066 - #47 inc
INFO  16:17:22,066 - #16 ==
INFO  16:17:22,066 - #47 jedan
INFO  16:17:22,067 - #41 )
INFO  16:17:22,069 - #47 pom
INFO  16:17:22,069 - #4 =
INFO  16:17:22,069 - #48 1
INFO  16:17:22,070 - #43 ;
INFO  16:17:22,070 - #15 else
INFO  16:17:22,070 - #21 if
INFO  16:17:22,070 - #26 (
INFO  16:17:22,070 - #47 inc
INFO  16:17:22,070 - #16 ==
INFO  16:17:22,070 - #48 2
INFO  16:17:22,070 - #41 )
INFO  16:17:22,070 - #47 pom
INFO  16:17:22,070 - #4 =
INFO  16:17:22,070 - #47 a
INFO  16:17:22,070 - #43 ;
INFO  16:17:22,070 - #40 return
INFO  16:17:22,071 - #47 sum
INFO  16:17:22,071 - #26 (
INFO  16:17:22,071 - #47 a
INFO  16:17:22,071 - #8 ,
INFO  16:17:22,072 - #47 pom
INFO  16:17:22,072 - #41 )
INFO  16:17:22,072 - #43 ;
INFO  16:17:22,073 - #38 }
INFO  16:17:22,073 - #47 bool
INFO  16:17:22,073 - #47 verify
INFO  16:17:22,073 - #26 (
INFO  16:17:22,073 - #41 )
INFO  16:17:22,073 - #25 {
INFO  16:17:22,073 - #36 print
INFO  16:17:22,073 - #26 (
INFO  16:17:22,074 - #50 v
INFO  16:17:22,074 - #41 )
INFO  16:17:22,074 - #43 ;
INFO  16:17:22,074 - #40 return
INFO  16:17:22,074 - #49 false
INFO  16:17:22,074 - #43 ;
INFO  16:17:22,074 - #38 }
INFO  16:17:22,074 - #45 void
INFO  16:17:22,075 - #47 main
INFO  16:17:22,075 - #26 (
INFO  16:17:22,075 - #41 )
INFO  16:17:22,075 - #25 {
INFO  16:17:22,075 - #21 if
INFO  16:17:22,075 - #26 (
INFO  16:17:22,075 - #48 1
INFO  16:17:22,075 - #32 !=
INFO  16:17:22,075 - #48 1
INFO  16:17:22,076 - #41 )
INFO  16:17:22,076 - #36 print
INFO  16:17:22,076 - #26 (
INFO  16:17:22,076 - #44 -
INFO  16:17:22,076 - #48 6
INFO  16:17:22,076 - #41 )
INFO  16:17:22,076 - #43 ;
INFO  16:17:22,076 - #15 else
INFO  16:17:22,076 - #36 print
INFO  16:17:22,076 - #26 (
INFO  16:17:22,076 - #48 0
INFO  16:17:22,076 - #41 )
INFO  16:17:22,077 - #43 ;
INFO  16:17:22,077 - #47 ibool
INFO  16:17:22,077 - #4 =
INFO  16:17:22,077 - #49 false
INFO  16:17:22,077 - #43 ;
INFO  16:17:22,077 - #47 i
INFO  16:17:22,077 - #4 =
INFO  16:17:22,077 - #48 0
INFO  16:17:22,077 - #43 ;
INFO  16:17:22,077 - #46 while
INFO  16:17:22,077 - #26 (
INFO  16:17:22,077 - #47 i
INFO  16:17:22,077 - #27 <
INFO  16:17:22,077 - #48 5
INFO  16:17:22,078 - #41 )
INFO  16:17:22,078 - #25 {
INFO  16:17:22,078 - #21 if
INFO  16:17:22,078 - #26 (
INFO  16:17:22,078 - #47 i
INFO  16:17:22,078 - #16 ==
INFO  16:17:22,078 - #48 2
INFO  16:17:22,078 - #41 )
INFO  16:17:22,078 - #47 ibool
INFO  16:17:22,078 - #4 =
INFO  16:17:22,078 - #49 true
INFO  16:17:22,078 - #43 ;
INFO  16:17:22,078 - #47 i
INFO  16:17:22,078 - #23 ++
INFO  16:17:22,078 - #43 ;
INFO  16:17:22,078 - #38 }
INFO  16:17:22,079 - #21 if
INFO  16:17:22,079 - #26 (
INFO  16:17:22,079 - #47 ibool
INFO  16:17:22,079 - #41 )
INFO  16:17:22,079 - #21 if
INFO  16:17:22,079 - #26 (
INFO  16:17:22,079 - #47 i
INFO  16:17:22,079 - #16 ==
INFO  16:17:22,079 - #48 5
INFO  16:17:22,079 - #41 )
INFO  16:17:22,079 - #36 print
INFO  16:17:22,079 - #26 (
INFO  16:17:22,079 - #48 1
INFO  16:17:22,079 - #41 )
INFO  16:17:22,079 - #43 ;
INFO  16:17:22,079 - #15 else
INFO  16:17:22,079 - #36 print
INFO  16:17:22,080 - #26 (
INFO  16:17:22,080 - #44 -
INFO  16:17:22,080 - #48 1
INFO  16:17:22,080 - #41 )
INFO  16:17:22,080 - #43 ;
INFO  16:17:22,080 - #47 a
INFO  16:17:22,080 - #4 =
INFO  16:17:22,080 - #48 2
INFO  16:17:22,080 - #43 ;
INFO  16:17:22,080 - #47 niz
INFO  16:17:22,080 - #4 =
INFO  16:17:22,080 - #33 new
INFO  16:17:22,080 - #47 int
INFO  16:17:22,080 - #28 [
INFO  16:17:22,080 - #48 3
INFO  16:17:22,080 - #42 ]
INFO  16:17:22,080 - #43 ;
INFO  16:17:22,080 - #47 niz
INFO  16:17:22,080 - #28 [
INFO  16:17:22,080 - #48 0
INFO  16:17:22,080 - #42 ]
INFO  16:17:22,080 - #4 =
INFO  16:17:22,081 - #48 1
INFO  16:17:22,081 - #31 *
INFO  16:17:22,081 - #47 a
INFO  16:17:22,082 - #43 ;
INFO  16:17:22,082 - #47 niz
INFO  16:17:22,082 - #28 [
INFO  16:17:22,082 - #48 1
INFO  16:17:22,082 - #42 ]
INFO  16:17:22,082 - #4 =
INFO  16:17:22,082 - #48 2
INFO  16:17:22,082 - #31 *
INFO  16:17:22,082 - #47 a
INFO  16:17:22,082 - #43 ;
INFO  16:17:22,082 - #47 niz
INFO  16:17:22,082 - #28 [
INFO  16:17:22,082 - #48 2
INFO  16:17:22,082 - #42 ]
INFO  16:17:22,082 - #4 =
INFO  16:17:22,083 - #47 sum
INFO  16:17:22,083 - #26 (
INFO  16:17:22,083 - #47 niz
INFO  16:17:22,083 - #28 [
INFO  16:17:22,083 - #48 1
INFO  16:17:22,083 - #42 ]
INFO  16:17:22,083 - #8 ,
INFO  16:17:22,083 - #47 niz
INFO  16:17:22,083 - #28 [
INFO  16:17:22,083 - #48 0
INFO  16:17:22,083 - #42 ]
INFO  16:17:22,083 - #41 )
INFO  16:17:22,083 - #31 *
INFO  16:17:22,083 - #47 a
INFO  16:17:22,083 - #2 +
INFO  16:17:22,083 - #48 1
INFO  16:17:22,083 - #43 ;
INFO  16:17:22,083 - #21 if
INFO  16:17:22,083 - #26 (
INFO  16:17:22,083 - #47 verify
INFO  16:17:22,083 - #26 (
INFO  16:17:22,083 - #41 )
INFO  16:17:22,083 - #35 ||
INFO  16:17:22,083 - #47 niz
INFO  16:17:22,083 - #28 [
INFO  16:17:22,083 - #48 2
INFO  16:17:22,083 - #42 ]
INFO  16:17:22,084 - #16 ==
INFO  16:17:22,084 - #48 4
INFO  16:17:22,084 - #41 )
INFO  16:17:22,084 - #36 print
INFO  16:17:22,084 - #26 (
INFO  16:17:22,084 - #47 ord
INFO  16:17:22,084 - #26 (
INFO  16:17:22,084 - #50 A
INFO  16:17:22,084 - #41 )
INFO  16:17:22,084 - #41 )
INFO  16:17:22,084 - #43 ;
INFO  16:17:22,084 - #15 else
INFO  16:17:22,084 - #36 print
INFO  16:17:22,084 - #26 (
INFO  16:17:22,084 - #47 ord
INFO  16:17:22,084 - #26 (
INFO  16:17:22,084 - #50 a
INFO  16:17:22,084 - #41 )
INFO  16:17:22,084 - #41 )
INFO  16:17:22,084 - #43 ;
INFO  16:17:22,084 - #36 print
INFO  16:17:22,085 - #26 (
INFO  16:17:22,085 - #47 eol
INFO  16:17:22,085 - #41 )
INFO  16:17:22,085 - #43 ;
INFO  16:17:22,085 - #47 i
INFO  16:17:22,085 - #4 =
INFO  16:17:22,085 - #48 0
INFO  16:17:22,085 - #43 ;
INFO  16:17:22,085 - #46 while
INFO  16:17:22,085 - #26 (
INFO  16:17:22,085 - #47 i
INFO  16:17:22,085 - #27 <
INFO  16:17:22,085 - #48 10
INFO  16:17:22,085 - #41 )
INFO  16:17:22,085 - #25 {
INFO  16:17:22,085 - #21 if
INFO  16:17:22,085 - #26 (
INFO  16:17:22,085 - #47 i
INFO  16:17:22,085 - #16 ==
INFO  16:17:22,085 - #48 3
INFO  16:17:22,085 - #41 )
INFO  16:17:22,085 - #25 {
INFO  16:17:22,085 - #47 i
INFO  16:17:22,086 - #23 ++
INFO  16:17:22,086 - #43 ;
INFO  16:17:22,086 - #10 continue
INFO  16:17:22,086 - #43 ;
INFO  16:17:22,086 - #38 }
INFO  16:17:22,087 - #21 if
INFO  16:17:22,087 - #26 (
INFO  16:17:22,087 - #47 i
INFO  16:17:22,087 - #16 ==
INFO  16:17:22,087 - #48 4
INFO  16:17:22,087 - #41 )
INFO  16:17:22,087 - #5 break
INFO  16:17:22,087 - #43 ;
INFO  16:17:22,087 - #47 i
INFO  16:17:22,087 - #4 =
INFO  16:17:22,087 - #47 inkrement
INFO  16:17:22,087 - #26 (
INFO  16:17:22,087 - #47 i
INFO  16:17:22,088 - #8 ,
INFO  16:17:22,088 - #48 1
INFO  16:17:22,088 - #41 )
INFO  16:17:22,088 - #43 ;
INFO  16:17:22,088 - #38 }
INFO  16:17:22,088 - #21 if
INFO  16:17:22,088 - #26 (
INFO  16:17:22,088 - #47 i
INFO  16:17:22,088 - #16 ==
INFO  16:17:22,088 - #48 3
INFO  16:17:22,088 - #3 &&
INFO  16:17:22,088 - #47 verify
INFO  16:17:22,088 - #26 (
INFO  16:17:22,088 - #41 )
INFO  16:17:22,088 - #41 )
INFO  16:17:22,088 - #36 print
INFO  16:17:22,088 - #26 (
INFO  16:17:22,088 - #44 -
INFO  16:17:22,088 - #48 4
INFO  16:17:22,088 - #41 )
INFO  16:17:22,088 - #43 ;
INFO  16:17:22,088 - #15 else
INFO  16:17:22,088 - #36 print
INFO  16:17:22,088 - #26 (
INFO  16:17:22,088 - #48 4
INFO  16:17:22,088 - #41 )
INFO  16:17:22,089 - #43 ;
INFO  16:17:22,089 - #39 read
INFO  16:17:22,089 - #26 (
INFO  16:17:22,089 - #47 niz
INFO  16:17:22,089 - #28 [
INFO  16:17:22,089 - #48 0
INFO  16:17:22,089 - #42 ]
INFO  16:17:22,089 - #41 )
INFO  16:17:22,089 - #43 ;
INFO  16:17:22,089 - #39 read
INFO  16:17:22,089 - #26 (
INFO  16:17:22,089 - #47 niz
INFO  16:17:22,089 - #28 [
INFO  16:17:22,089 - #48 1
INFO  16:17:22,089 - #42 ]
INFO  16:17:22,089 - #41 )
INFO  16:17:22,089 - #43 ;
INFO  16:17:22,089 - #39 read
INFO  16:17:22,089 - #26 (
INFO  16:17:22,089 - #47 niz
INFO  16:17:22,089 - #28 [
INFO  16:17:22,089 - #48 2
INFO  16:17:22,089 - #42 ]
INFO  16:17:22,089 - #41 )
INFO  16:17:22,089 - #43 ;
INFO  16:17:22,089 - #36 print
INFO  16:17:22,089 - #26 (
INFO  16:17:22,090 - #47 eol
INFO  16:17:22,090 - #41 )
INFO  16:17:22,090 - #43 ;
INFO  16:17:22,090 - #36 print
INFO  16:17:22,090 - #26 (
INFO  16:17:22,090 - #47 sum
INFO  16:17:22,090 - #26 (
INFO  16:17:22,090 - #47 sum
INFO  16:17:22,090 - #26 (
INFO  16:17:22,090 - #47 niz
INFO  16:17:22,090 - #28 [
INFO  16:17:22,090 - #48 0
INFO  16:17:22,090 - #42 ]
INFO  16:17:22,090 - #8 ,
INFO  16:17:22,090 - #47 niz
INFO  16:17:22,090 - #28 [
INFO  16:17:22,090 - #48 1
INFO  16:17:22,090 - #42 ]
INFO  16:17:22,090 - #41 )
INFO  16:17:22,090 - #8 ,
INFO  16:17:22,090 - #47 niz
INFO  16:17:22,090 - #28 [
INFO  16:17:22,090 - #48 2
INFO  16:17:22,090 - #42 ]
INFO  16:17:22,090 - #41 )
INFO  16:17:22,090 - #41 )
INFO  16:17:22,090 - #43 ;
INFO  16:17:22,090 - #36 print
INFO  16:17:22,090 - #26 (
INFO  16:17:22,090 - #47 eol
INFO  16:17:22,090 - #41 )
INFO  16:17:22,091 - #43 ;
INFO  16:17:22,091 - #36 print
INFO  16:17:22,091 - #26 (
INFO  16:17:22,091 - #47 inkrement
INFO  16:17:22,091 - #26 (
INFO  16:17:22,091 - #47 niz
INFO  16:17:22,091 - #28 [
INFO  16:17:22,091 - #48 2
INFO  16:17:22,091 - #42 ]
INFO  16:17:22,091 - #8 ,
INFO  16:17:22,091 - #48 2
INFO  16:17:22,091 - #41 )
INFO  16:17:22,091 - #41 )
INFO  16:17:22,091 - #43 ;
INFO  16:17:22,091 - #47 a
INFO  16:17:22,091 - #4 =
INFO  16:17:22,091 - #48 3
INFO  16:17:22,091 - #43 ;
INFO  16:17:22,091 - #47 i
INFO  16:17:22,091 - #4 =
INFO  16:17:22,091 - #48 0
INFO  16:17:22,091 - #43 ;
INFO  16:17:22,091 - #46 while
INFO  16:17:22,091 - #26 (
INFO  16:17:22,091 - #47 i
INFO  16:17:22,091 - #27 <
INFO  16:17:22,092 - #48 3
INFO  16:17:22,092 - #41 )
INFO  16:17:22,092 - #25 {
INFO  16:17:22,092 - #47 niz
INFO  16:17:22,092 - #28 [
INFO  16:17:22,092 - #47 i
INFO  16:17:22,092 - #42 ]
INFO  16:17:22,092 - #4 =
INFO  16:17:22,092 - #47 niz
INFO  16:17:22,092 - #28 [
INFO  16:17:22,092 - #47 i
INFO  16:17:22,092 - #42 ]
INFO  16:17:22,092 - #31 *
INFO  16:17:22,092 - #48 2
INFO  16:17:22,092 - #31 *
INFO  16:17:22,092 - #47 a
INFO  16:17:22,092 - #43 ;
INFO  16:17:22,092 - #47 i
INFO  16:17:22,092 - #23 ++
INFO  16:17:22,092 - #43 ;
INFO  16:17:22,092 - #38 }
INFO  16:17:22,092 - #47 niz
INFO  16:17:22,092 - #18 .foreach
ERROR 16:17:22,092 - 
Sintaksna greska na liniji 92
ERROR 16:17:22,092 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 92
