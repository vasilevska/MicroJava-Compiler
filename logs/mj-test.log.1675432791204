INFO  14:58:52,557 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  14:58:52,591 - #36 program
INFO  14:58:52,591 - #46 MJProgram
INFO  14:58:52,591 - #6 class
INFO  14:58:52,592 - #46 Predmet
INFO  14:58:52,592 - #24 {
INFO  14:58:52,592 - #46 int
INFO  14:58:52,593 - #46 tezina
INFO  14:58:52,593 - #42 ;
INFO  14:58:52,594 - #46 char
INFO  14:58:52,595 - #46 vrsta
INFO  14:58:52,595 - #42 ;
INFO  14:58:52,595 - #24 {
INFO  14:58:52,595 - #46 Predmet
INFO  14:58:52,595 - #25 (
INFO  14:58:52,595 - #40 )
INFO  14:58:52,595 - #24 {
INFO  14:58:52,596 - #37 }
INFO  14:58:52,596 - #44 void
INFO  14:58:52,597 - #46 postaviTezinu
INFO  14:58:52,597 - #25 (
INFO  14:58:52,597 - #46 int
INFO  14:58:52,601 - #46 tezina
INFO  14:58:52,601 - #40 )
INFO  14:58:52,602 - #24 {
INFO  14:58:52,602 - #37 }
INFO  14:58:52,602 - #37 }
INFO  14:58:52,602 - #37 }
INFO  14:58:52,603 - #24 {
INFO  14:58:52,603 - #46 int
INFO  14:58:52,603 - #46 main
INFO  14:58:52,603 - #25 (
INFO  14:58:52,604 - #40 )
INFO  14:58:52,604 - #24 {
INFO  14:58:52,604 - #46 niz
INFO  14:58:52,604 - #13 .
INFO  14:58:52,604 - #17 foreach
INFO  14:58:52,604 - #25 (
INFO  14:58:52,604 - #46 curr
INFO  14:58:52,604 - #33 =>
INFO  14:58:52,604 - #24 {
INFO  14:58:52,604 - #46 niz2
INFO  14:58:52,604 - #4 =
INFO  14:58:52,605 - #46 niz2
INFO  14:58:52,605 - #2 +
INFO  14:58:52,607 - #46 curr
INFO  14:58:52,607 - #30 *
INFO  14:58:52,607 - #46 curr
INFO  14:58:52,608 - #42 ;
INFO  14:58:52,608 - #37 }
INFO  14:58:52,608 - #40 )
INFO  14:58:52,609 - #42 ;
INFO  14:58:52,609 - #39 return
INFO  14:58:52,609 - #47 3
INFO  14:58:52,609 - #42 ;
INFO  14:58:52,609 - #37 }
INFO  14:58:52,610 - #37 }
INFO  14:58:52,614 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclsClass(
    NoDecl(
    ) [NoDecl]
    ClassDecl(
      ClassName(
       Predmet
      ) [ClassName]
      NoParent(
      ) [NoParent]
      VarDecls(
        VarDecls(
          NoVarDecl(
          ) [NoVarDecl]
          VarDecl(
            Type(
             int
            ) [Type]
           tezina
            NotArray(
            ) [NotArray]
            NotIdentArray(
            ) [NotIdentArray]
          ) [VarDecl]
        ) [VarDecls]
        VarDecl(
          Type(
           char
          ) [Type]
         vrsta
          NotArray(
          ) [NotArray]
          NotIdentArray(
          ) [NotIdentArray]
        ) [VarDecl]
      ) [VarDecls]
      ClassBodyConstrMeth(
        ConstructorSingleDecl(
          ConstructorDecl(
            ConstructorName(
             Predmet
            ) [ConstructorName]
            NoFormPars(
            ) [NoFormPars]
            FunctionBodyDerived1(
              NoVarDecl(
              ) [NoVarDecl]
              NoStatement(
              ) [NoStatement]
            ) [FunctionBodyDerived1]
          ) [ConstructorDecl]
        ) [ConstructorSingleDecl]
        MethodDeclDerived1(
          MethodNameVoid(
           postaviTezinu
          ) [MethodNameVoid]
          OptFormPars(
            FormPars(
              Type(
               int
              ) [Type]
             tezina
              NotArray(
              ) [NotArray]
              NotParamArray(
              ) [NotParamArray]
            ) [FormPars]
          ) [OptFormPars]
          FunctionBodyDerived1(
            NoVarDecl(
            ) [NoVarDecl]
            NoStatement(
            ) [NoStatement]
          ) [FunctionBodyDerived1]
        ) [MethodDeclDerived1]
        NoMethDecl(
        ) [NoMethDecl]
      ) [ClassBodyConstrMeth]
    ) [ClassDecl]
  ) [DeclsClass]
  MethDecls(
    NoMethDecl(
    ) [NoMethDecl]
    MethodDeclDerived1(
      MethodNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodNameType]
      NoFormPars(
      ) [NoFormPars]
      FunctionBodyDerived1(
        NoVarDecl(
        ) [NoVarDecl]
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            StatementForeach(
              DesignatorIdent(
               niz
              ) [DesignatorIdent]
             curr
              StatementBlock(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  StatementDesignator(
                    DesignatorStatementAssignExpr(
                      DesignatorIdent(
                       niz2
                      ) [DesignatorIdent]
                      Assignop(
                      ) [Assignop]
                      ExprBase(
                        Term(
                          FactorBase(
                            DesignatorIdent(
                             niz2
                            ) [DesignatorIdent]
                          ) [FactorBase]
                          NoMulFactor(
                          ) [NoMulFactor]
                        ) [Term]
                        AddTerms(
                          NoAddTerm(
                          ) [NoAddTerm]
                          AddOp(
                          ) [AddOp]
                          Term(
                            FactorBase(
                              DesignatorIdent(
                               curr
                              ) [DesignatorIdent]
                            ) [FactorBase]
                            MulFactors(
                              NoMulFactor(
                              ) [NoMulFactor]
                              MulOp(
                              ) [MulOp]
                              FactorBase(
                                DesignatorIdent(
                                 curr
                                ) [DesignatorIdent]
                              ) [FactorBase]
                            ) [MulFactors]
                          ) [Term]
                        ) [AddTerms]
                      ) [ExprBase]
                    ) [DesignatorStatementAssignExpr]
                  ) [StatementDesignator]
                ) [Statements]
              ) [StatementBlock]
            ) [StatementForeach]
          ) [Statements]
          StatementReturnExpr(
            ExprBase(
              Term(
                FactorNumber(
                 3
                ) [FactorNumber]
                NoMulFactor(
                ) [NoMulFactor]
              ) [Term]
              NoAddTerm(
              ) [NoAddTerm]
            ) [ExprBase]
          ) [StatementReturnExpr]
        ) [Statements]
      ) [FunctionBodyDerived1]
    ) [MethodDeclDerived1]
  ) [MethDecls]
) [Program]
INFO  14:58:52,614 - ===================================
INFO  14:58:52,619 - Deklarisana promenljiva tezina na liniji 6
