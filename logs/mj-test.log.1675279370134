INFO  16:29:26,574 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  16:29:26,620 - #37 program
INFO  16:29:26,620 - #47 test302
INFO  16:29:26,621 - #9 const
INFO  16:29:26,621 - #47 int
INFO  16:29:26,621 - #47 jedan
INFO  16:29:26,622 - #4 =
INFO  16:29:26,622 - #48 1
INFO  16:29:26,623 - #43 ;
INFO  16:29:26,624 - #47 int
INFO  16:29:26,624 - #47 i
INFO  16:29:26,625 - #43 ;
INFO  16:29:26,626 - #47 bool
INFO  16:29:26,627 - #47 ibool
INFO  16:29:26,627 - #43 ;
INFO  16:29:26,627 - #47 int
INFO  16:29:26,627 - #47 niz2
INFO  16:29:26,627 - #43 ;
INFO  16:29:26,627 - #47 int
INFO  16:29:26,627 - #47 niz
INFO  16:29:26,627 - #28 [
INFO  16:29:26,627 - #42 ]
INFO  16:29:26,627 - #43 ;
INFO  16:29:26,632 - #47 int
INFO  16:29:26,632 - #47 a
INFO  16:29:26,632 - #8 ,
INFO  16:29:26,632 - #47 curr
INFO  16:29:26,632 - #43 ;
INFO  16:29:26,632 - #25 {
INFO  16:29:26,632 - #47 int
INFO  16:29:26,633 - #47 sum
INFO  16:29:26,633 - #26 (
INFO  16:29:26,633 - #47 int
INFO  16:29:26,633 - #47 z
INFO  16:29:26,633 - #8 ,
INFO  16:29:26,633 - #47 int
INFO  16:29:26,633 - #47 d
INFO  16:29:26,633 - #41 )
INFO  16:29:26,634 - #25 {
INFO  16:29:26,635 - #40 return
INFO  16:29:26,635 - #47 z
INFO  16:29:26,635 - #2 +
INFO  16:29:26,638 - #47 d
INFO  16:29:26,640 - #43 ;
INFO  16:29:26,640 - #38 }
INFO  16:29:26,640 - #47 int
INFO  16:29:26,641 - #47 inkrement
INFO  16:29:26,641 - #26 (
INFO  16:29:26,641 - #47 int
INFO  16:29:26,641 - #47 a
INFO  16:29:26,641 - #8 ,
INFO  16:29:26,641 - #47 int
INFO  16:29:26,641 - #47 inc
INFO  16:29:26,641 - #41 )
INFO  16:29:26,641 - #47 int
INFO  16:29:26,641 - #47 pom
INFO  16:29:26,641 - #43 ;
INFO  16:29:26,641 - #25 {
INFO  16:29:26,642 - #21 if
INFO  16:29:26,642 - #26 (
INFO  16:29:26,642 - #47 inc
INFO  16:29:26,642 - #16 ==
INFO  16:29:26,642 - #47 jedan
INFO  16:29:26,643 - #41 )
INFO  16:29:26,645 - #47 pom
INFO  16:29:26,645 - #4 =
INFO  16:29:26,645 - #48 1
INFO  16:29:26,645 - #43 ;
INFO  16:29:26,646 - #15 else
INFO  16:29:26,646 - #21 if
INFO  16:29:26,646 - #26 (
INFO  16:29:26,646 - #47 inc
INFO  16:29:26,646 - #16 ==
INFO  16:29:26,646 - #48 2
INFO  16:29:26,646 - #41 )
INFO  16:29:26,646 - #47 pom
INFO  16:29:26,646 - #4 =
INFO  16:29:26,646 - #47 a
INFO  16:29:26,646 - #43 ;
INFO  16:29:26,646 - #40 return
INFO  16:29:26,647 - #47 sum
INFO  16:29:26,647 - #26 (
INFO  16:29:26,647 - #47 a
INFO  16:29:26,647 - #8 ,
INFO  16:29:26,648 - #47 pom
INFO  16:29:26,648 - #41 )
INFO  16:29:26,648 - #43 ;
INFO  16:29:26,648 - #38 }
INFO  16:29:26,648 - #47 bool
INFO  16:29:26,648 - #47 verify
INFO  16:29:26,649 - #26 (
INFO  16:29:26,649 - #41 )
INFO  16:29:26,649 - #25 {
INFO  16:29:26,649 - #36 print
INFO  16:29:26,649 - #26 (
INFO  16:29:26,649 - #50 v
INFO  16:29:26,649 - #41 )
INFO  16:29:26,649 - #43 ;
INFO  16:29:26,649 - #40 return
INFO  16:29:26,650 - #49 false
INFO  16:29:26,650 - #43 ;
INFO  16:29:26,650 - #38 }
INFO  16:29:26,650 - #45 void
INFO  16:29:26,650 - #47 main
INFO  16:29:26,650 - #26 (
INFO  16:29:26,650 - #41 )
INFO  16:29:26,650 - #25 {
INFO  16:29:26,650 - #21 if
INFO  16:29:26,650 - #26 (
INFO  16:29:26,650 - #48 1
INFO  16:29:26,650 - #32 !=
INFO  16:29:26,650 - #48 1
INFO  16:29:26,651 - #41 )
INFO  16:29:26,651 - #36 print
INFO  16:29:26,651 - #26 (
INFO  16:29:26,651 - #44 -
INFO  16:29:26,651 - #48 6
INFO  16:29:26,651 - #41 )
INFO  16:29:26,651 - #43 ;
INFO  16:29:26,651 - #15 else
INFO  16:29:26,651 - #36 print
INFO  16:29:26,651 - #26 (
INFO  16:29:26,651 - #48 0
INFO  16:29:26,652 - #41 )
INFO  16:29:26,652 - #43 ;
INFO  16:29:26,652 - #47 ibool
INFO  16:29:26,652 - #4 =
INFO  16:29:26,652 - #49 false
INFO  16:29:26,652 - #43 ;
INFO  16:29:26,652 - #47 i
INFO  16:29:26,652 - #4 =
INFO  16:29:26,652 - #48 0
INFO  16:29:26,652 - #43 ;
INFO  16:29:26,652 - #46 while
INFO  16:29:26,652 - #26 (
INFO  16:29:26,652 - #47 i
INFO  16:29:26,652 - #27 <
INFO  16:29:26,652 - #48 5
INFO  16:29:26,653 - #41 )
INFO  16:29:26,653 - #25 {
INFO  16:29:26,653 - #21 if
INFO  16:29:26,653 - #26 (
INFO  16:29:26,653 - #47 i
INFO  16:29:26,653 - #16 ==
INFO  16:29:26,653 - #48 2
INFO  16:29:26,653 - #41 )
INFO  16:29:26,653 - #47 ibool
INFO  16:29:26,653 - #4 =
INFO  16:29:26,653 - #49 true
INFO  16:29:26,653 - #43 ;
INFO  16:29:26,653 - #47 i
INFO  16:29:26,654 - #23 ++
INFO  16:29:26,654 - #43 ;
INFO  16:29:26,654 - #38 }
INFO  16:29:26,654 - #21 if
INFO  16:29:26,654 - #26 (
INFO  16:29:26,654 - #47 ibool
INFO  16:29:26,654 - #41 )
INFO  16:29:26,654 - #21 if
INFO  16:29:26,654 - #26 (
INFO  16:29:26,654 - #47 i
INFO  16:29:26,654 - #16 ==
INFO  16:29:26,654 - #48 5
INFO  16:29:26,654 - #41 )
INFO  16:29:26,655 - #36 print
INFO  16:29:26,655 - #26 (
INFO  16:29:26,655 - #48 1
INFO  16:29:26,655 - #41 )
INFO  16:29:26,655 - #43 ;
INFO  16:29:26,655 - #15 else
INFO  16:29:26,655 - #36 print
INFO  16:29:26,655 - #26 (
INFO  16:29:26,655 - #44 -
INFO  16:29:26,655 - #48 1
INFO  16:29:26,655 - #41 )
INFO  16:29:26,655 - #43 ;
INFO  16:29:26,655 - #47 a
INFO  16:29:26,655 - #4 =
INFO  16:29:26,655 - #48 2
INFO  16:29:26,655 - #43 ;
INFO  16:29:26,655 - #47 niz
INFO  16:29:26,655 - #4 =
INFO  16:29:26,655 - #33 new
INFO  16:29:26,655 - #47 int
INFO  16:29:26,655 - #28 [
INFO  16:29:26,655 - #48 3
INFO  16:29:26,655 - #42 ]
INFO  16:29:26,656 - #43 ;
INFO  16:29:26,656 - #47 niz
INFO  16:29:26,656 - #28 [
INFO  16:29:26,656 - #48 0
INFO  16:29:26,656 - #42 ]
INFO  16:29:26,656 - #4 =
INFO  16:29:26,656 - #48 1
INFO  16:29:26,656 - #31 *
INFO  16:29:26,656 - #47 a
INFO  16:29:26,657 - #43 ;
INFO  16:29:26,658 - #47 niz
INFO  16:29:26,658 - #28 [
INFO  16:29:26,658 - #48 1
INFO  16:29:26,658 - #42 ]
INFO  16:29:26,658 - #4 =
INFO  16:29:26,658 - #48 2
INFO  16:29:26,658 - #31 *
INFO  16:29:26,658 - #47 a
INFO  16:29:26,658 - #43 ;
INFO  16:29:26,658 - #47 niz
INFO  16:29:26,658 - #28 [
INFO  16:29:26,658 - #48 2
INFO  16:29:26,658 - #42 ]
INFO  16:29:26,658 - #4 =
INFO  16:29:26,658 - #47 sum
INFO  16:29:26,658 - #26 (
INFO  16:29:26,658 - #47 niz
INFO  16:29:26,658 - #28 [
INFO  16:29:26,658 - #48 1
INFO  16:29:26,658 - #42 ]
INFO  16:29:26,658 - #8 ,
INFO  16:29:26,658 - #47 niz
INFO  16:29:26,658 - #28 [
INFO  16:29:26,658 - #48 0
INFO  16:29:26,659 - #42 ]
INFO  16:29:26,659 - #41 )
INFO  16:29:26,659 - #31 *
INFO  16:29:26,659 - #47 a
INFO  16:29:26,659 - #2 +
INFO  16:29:26,659 - #48 1
INFO  16:29:26,659 - #43 ;
INFO  16:29:26,659 - #21 if
INFO  16:29:26,659 - #26 (
INFO  16:29:26,659 - #47 verify
INFO  16:29:26,659 - #26 (
INFO  16:29:26,659 - #41 )
INFO  16:29:26,659 - #35 ||
INFO  16:29:26,659 - #47 niz
INFO  16:29:26,659 - #28 [
INFO  16:29:26,659 - #48 2
INFO  16:29:26,659 - #42 ]
INFO  16:29:26,659 - #16 ==
INFO  16:29:26,660 - #48 4
INFO  16:29:26,660 - #41 )
INFO  16:29:26,660 - #36 print
INFO  16:29:26,660 - #26 (
INFO  16:29:26,660 - #47 ord
INFO  16:29:26,660 - #26 (
INFO  16:29:26,660 - #50 A
INFO  16:29:26,660 - #41 )
INFO  16:29:26,660 - #41 )
INFO  16:29:26,660 - #43 ;
INFO  16:29:26,660 - #15 else
INFO  16:29:26,660 - #36 print
INFO  16:29:26,660 - #26 (
INFO  16:29:26,660 - #47 ord
INFO  16:29:26,660 - #26 (
INFO  16:29:26,660 - #50 a
INFO  16:29:26,660 - #41 )
INFO  16:29:26,660 - #41 )
INFO  16:29:26,660 - #43 ;
INFO  16:29:26,660 - #36 print
INFO  16:29:26,660 - #26 (
INFO  16:29:26,660 - #47 eol
INFO  16:29:26,660 - #41 )
INFO  16:29:26,660 - #43 ;
INFO  16:29:26,660 - #47 i
INFO  16:29:26,661 - #4 =
INFO  16:29:26,661 - #48 0
INFO  16:29:26,661 - #43 ;
INFO  16:29:26,661 - #46 while
INFO  16:29:26,661 - #26 (
INFO  16:29:26,661 - #47 i
INFO  16:29:26,661 - #27 <
INFO  16:29:26,661 - #48 10
INFO  16:29:26,661 - #41 )
INFO  16:29:26,661 - #25 {
INFO  16:29:26,661 - #21 if
INFO  16:29:26,661 - #26 (
INFO  16:29:26,661 - #47 i
INFO  16:29:26,661 - #16 ==
INFO  16:29:26,661 - #48 3
INFO  16:29:26,661 - #41 )
INFO  16:29:26,661 - #25 {
INFO  16:29:26,661 - #47 i
INFO  16:29:26,661 - #23 ++
INFO  16:29:26,661 - #43 ;
INFO  16:29:26,661 - #10 continue
INFO  16:29:26,661 - #43 ;
INFO  16:29:26,662 - #38 }
INFO  16:29:26,662 - #21 if
INFO  16:29:26,662 - #26 (
INFO  16:29:26,662 - #47 i
INFO  16:29:26,662 - #16 ==
INFO  16:29:26,662 - #48 4
INFO  16:29:26,662 - #41 )
INFO  16:29:26,663 - #5 break
INFO  16:29:26,663 - #43 ;
INFO  16:29:26,663 - #47 i
INFO  16:29:26,663 - #4 =
INFO  16:29:26,663 - #47 inkrement
INFO  16:29:26,663 - #26 (
INFO  16:29:26,663 - #47 i
INFO  16:29:26,663 - #8 ,
INFO  16:29:26,664 - #48 1
INFO  16:29:26,664 - #41 )
INFO  16:29:26,664 - #43 ;
INFO  16:29:26,664 - #38 }
INFO  16:29:26,664 - #21 if
INFO  16:29:26,664 - #26 (
INFO  16:29:26,664 - #47 i
INFO  16:29:26,664 - #16 ==
INFO  16:29:26,664 - #48 3
INFO  16:29:26,664 - #3 &&
INFO  16:29:26,664 - #47 verify
INFO  16:29:26,664 - #26 (
INFO  16:29:26,664 - #41 )
INFO  16:29:26,664 - #41 )
INFO  16:29:26,664 - #36 print
INFO  16:29:26,664 - #26 (
INFO  16:29:26,664 - #44 -
INFO  16:29:26,664 - #48 4
INFO  16:29:26,664 - #41 )
INFO  16:29:26,664 - #43 ;
INFO  16:29:26,664 - #15 else
INFO  16:29:26,664 - #36 print
INFO  16:29:26,664 - #26 (
INFO  16:29:26,664 - #48 4
INFO  16:29:26,664 - #41 )
INFO  16:29:26,664 - #43 ;
INFO  16:29:26,664 - #39 read
INFO  16:29:26,664 - #26 (
INFO  16:29:26,664 - #47 niz
INFO  16:29:26,664 - #28 [
INFO  16:29:26,665 - #48 0
INFO  16:29:26,665 - #42 ]
INFO  16:29:26,665 - #41 )
INFO  16:29:26,665 - #43 ;
INFO  16:29:26,665 - #39 read
INFO  16:29:26,665 - #26 (
INFO  16:29:26,665 - #47 niz
INFO  16:29:26,665 - #28 [
INFO  16:29:26,665 - #48 1
INFO  16:29:26,665 - #42 ]
INFO  16:29:26,665 - #41 )
INFO  16:29:26,665 - #43 ;
INFO  16:29:26,665 - #39 read
INFO  16:29:26,665 - #26 (
INFO  16:29:26,665 - #47 niz
INFO  16:29:26,665 - #28 [
INFO  16:29:26,665 - #48 2
INFO  16:29:26,665 - #42 ]
INFO  16:29:26,665 - #41 )
INFO  16:29:26,665 - #43 ;
INFO  16:29:26,665 - #36 print
INFO  16:29:26,665 - #26 (
INFO  16:29:26,665 - #47 eol
INFO  16:29:26,665 - #41 )
INFO  16:29:26,665 - #43 ;
INFO  16:29:26,665 - #36 print
INFO  16:29:26,665 - #26 (
INFO  16:29:26,665 - #47 sum
INFO  16:29:26,665 - #26 (
INFO  16:29:26,665 - #47 sum
INFO  16:29:26,665 - #26 (
INFO  16:29:26,665 - #47 niz
INFO  16:29:26,665 - #28 [
INFO  16:29:26,665 - #48 0
INFO  16:29:26,665 - #42 ]
INFO  16:29:26,665 - #8 ,
INFO  16:29:26,665 - #47 niz
INFO  16:29:26,666 - #28 [
INFO  16:29:26,666 - #48 1
INFO  16:29:26,666 - #42 ]
INFO  16:29:26,666 - #41 )
INFO  16:29:26,666 - #8 ,
INFO  16:29:26,666 - #47 niz
INFO  16:29:26,666 - #28 [
INFO  16:29:26,666 - #48 2
INFO  16:29:26,666 - #42 ]
INFO  16:29:26,666 - #41 )
INFO  16:29:26,666 - #41 )
INFO  16:29:26,666 - #43 ;
INFO  16:29:26,666 - #36 print
INFO  16:29:26,666 - #26 (
INFO  16:29:26,666 - #47 eol
INFO  16:29:26,666 - #41 )
INFO  16:29:26,666 - #43 ;
INFO  16:29:26,666 - #36 print
INFO  16:29:26,666 - #26 (
INFO  16:29:26,666 - #47 inkrement
INFO  16:29:26,666 - #26 (
INFO  16:29:26,666 - #47 niz
INFO  16:29:26,666 - #28 [
INFO  16:29:26,666 - #48 2
INFO  16:29:26,666 - #42 ]
INFO  16:29:26,666 - #8 ,
INFO  16:29:26,666 - #48 2
INFO  16:29:26,666 - #41 )
INFO  16:29:26,666 - #41 )
INFO  16:29:26,666 - #43 ;
INFO  16:29:26,666 - #47 a
INFO  16:29:26,666 - #4 =
INFO  16:29:26,666 - #48 3
INFO  16:29:26,667 - #43 ;
INFO  16:29:26,667 - #47 i
INFO  16:29:26,667 - #4 =
INFO  16:29:26,667 - #48 0
INFO  16:29:26,667 - #43 ;
INFO  16:29:26,667 - #46 while
INFO  16:29:26,667 - #26 (
INFO  16:29:26,667 - #47 i
INFO  16:29:26,667 - #27 <
INFO  16:29:26,667 - #48 3
INFO  16:29:26,667 - #41 )
INFO  16:29:26,667 - #25 {
INFO  16:29:26,667 - #47 niz
INFO  16:29:26,667 - #28 [
INFO  16:29:26,667 - #47 i
INFO  16:29:26,667 - #42 ]
INFO  16:29:26,667 - #4 =
INFO  16:29:26,667 - #47 niz
INFO  16:29:26,667 - #28 [
INFO  16:29:26,667 - #47 i
INFO  16:29:26,667 - #42 ]
INFO  16:29:26,667 - #31 *
INFO  16:29:26,667 - #48 2
INFO  16:29:26,667 - #31 *
INFO  16:29:26,667 - #47 a
INFO  16:29:26,667 - #43 ;
INFO  16:29:26,667 - #47 i
INFO  16:29:26,667 - #23 ++
INFO  16:29:26,667 - #43 ;
INFO  16:29:26,667 - #38 }
INFO  16:29:26,667 - #47 niz
INFO  16:29:26,667 - #14 .
INFO  16:29:26,667 - #18 foreach
ERROR 16:29:26,667 - 
Sintaksna greska na liniji 92
ERROR 16:29:26,667 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 92
