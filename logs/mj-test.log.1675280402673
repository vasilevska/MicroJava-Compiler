INFO  20:31:23,673 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  20:31:23,767 - #37 program
INFO  20:31:23,767 - #47 test302
INFO  20:31:23,767 - #9 const
INFO  20:31:23,769 - #47 int
INFO  20:31:23,770 - #47 jedan
INFO  20:31:23,771 - #4 =
INFO  20:31:23,771 - #48 1
INFO  20:31:23,772 - #43 ;
INFO  20:31:23,774 - #47 int
INFO  20:31:23,776 - #47 i
INFO  20:31:23,776 - #43 ;
INFO  20:31:23,778 - #47 bool
INFO  20:31:23,780 - #47 ibool
INFO  20:31:23,780 - #43 ;
INFO  20:31:23,780 - #47 int
INFO  20:31:23,780 - #47 niz2
INFO  20:31:23,780 - #43 ;
INFO  20:31:23,780 - #47 int
INFO  20:31:23,781 - #47 niz
INFO  20:31:23,781 - #28 [
INFO  20:31:23,781 - #42 ]
INFO  20:31:23,781 - #43 ;
INFO  20:31:23,786 - #47 int
INFO  20:31:23,786 - #47 a
INFO  20:31:23,786 - #8 ,
INFO  20:31:23,786 - #47 curr
INFO  20:31:23,786 - #43 ;
INFO  20:31:23,786 - #25 {
INFO  20:31:23,787 - #47 int
INFO  20:31:23,788 - #47 sum
INFO  20:31:23,788 - #26 (
INFO  20:31:23,788 - #47 int
INFO  20:31:23,788 - #47 z
INFO  20:31:23,788 - #8 ,
INFO  20:31:23,789 - #47 int
INFO  20:31:23,789 - #47 d
INFO  20:31:23,789 - #41 )
INFO  20:31:23,791 - #25 {
INFO  20:31:23,792 - #40 return
INFO  20:31:23,793 - #47 z
INFO  20:31:23,793 - #2 +
INFO  20:31:23,800 - #47 d
INFO  20:31:23,802 - #43 ;
INFO  20:31:23,802 - #38 }
INFO  20:31:23,803 - #47 int
INFO  20:31:23,803 - #47 inkrement
INFO  20:31:23,803 - #26 (
INFO  20:31:23,803 - #47 int
INFO  20:31:23,804 - #47 a
INFO  20:31:23,804 - #8 ,
INFO  20:31:23,804 - #47 int
INFO  20:31:23,804 - #47 inc
INFO  20:31:23,804 - #41 )
INFO  20:31:23,804 - #47 int
INFO  20:31:23,804 - #47 pom
INFO  20:31:23,804 - #43 ;
INFO  20:31:23,804 - #25 {
INFO  20:31:23,805 - #21 if
INFO  20:31:23,805 - #26 (
INFO  20:31:23,805 - #47 inc
INFO  20:31:23,805 - #16 ==
INFO  20:31:23,805 - #47 jedan
INFO  20:31:23,807 - #41 )
INFO  20:31:23,811 - #47 pom
INFO  20:31:23,811 - #4 =
INFO  20:31:23,812 - #48 1
INFO  20:31:23,812 - #43 ;
INFO  20:31:23,812 - #15 else
INFO  20:31:23,812 - #21 if
INFO  20:31:23,812 - #26 (
INFO  20:31:23,812 - #47 inc
INFO  20:31:23,812 - #16 ==
INFO  20:31:23,813 - #48 2
INFO  20:31:23,813 - #41 )
INFO  20:31:23,813 - #47 pom
INFO  20:31:23,813 - #4 =
INFO  20:31:23,813 - #47 a
INFO  20:31:23,813 - #43 ;
INFO  20:31:23,813 - #40 return
INFO  20:31:23,814 - #47 sum
INFO  20:31:23,814 - #26 (
INFO  20:31:23,815 - #47 a
INFO  20:31:23,815 - #8 ,
INFO  20:31:23,816 - #47 pom
INFO  20:31:23,816 - #41 )
INFO  20:31:23,817 - #43 ;
INFO  20:31:23,817 - #38 }
INFO  20:31:23,817 - #47 bool
INFO  20:31:23,818 - #47 verify
INFO  20:31:23,818 - #26 (
INFO  20:31:23,818 - #41 )
INFO  20:31:23,819 - #25 {
INFO  20:31:23,819 - #36 print
INFO  20:31:23,820 - #26 (
INFO  20:31:23,820 - #50 v
INFO  20:31:23,820 - #41 )
INFO  20:31:23,820 - #43 ;
INFO  20:31:23,820 - #40 return
INFO  20:31:23,820 - #49 false
INFO  20:31:23,821 - #43 ;
INFO  20:31:23,821 - #38 }
INFO  20:31:23,821 - #45 void
INFO  20:31:23,821 - #47 main
INFO  20:31:23,821 - #26 (
INFO  20:31:23,821 - #41 )
INFO  20:31:23,822 - #25 {
INFO  20:31:23,822 - #21 if
INFO  20:31:23,822 - #26 (
INFO  20:31:23,822 - #48 1
INFO  20:31:23,822 - #32 !=
INFO  20:31:23,822 - #48 1
INFO  20:31:23,823 - #41 )
INFO  20:31:23,824 - #36 print
INFO  20:31:23,824 - #26 (
INFO  20:31:23,824 - #44 -
INFO  20:31:23,824 - #48 6
INFO  20:31:23,825 - #41 )
INFO  20:31:23,825 - #43 ;
INFO  20:31:23,825 - #15 else
INFO  20:31:23,825 - #36 print
INFO  20:31:23,825 - #26 (
INFO  20:31:23,826 - #48 0
INFO  20:31:23,826 - #41 )
INFO  20:31:23,826 - #43 ;
INFO  20:31:23,826 - #47 ibool
INFO  20:31:23,826 - #4 =
INFO  20:31:23,826 - #49 false
INFO  20:31:23,827 - #43 ;
INFO  20:31:23,827 - #47 i
INFO  20:31:23,827 - #4 =
INFO  20:31:23,827 - #48 0
INFO  20:31:23,827 - #43 ;
INFO  20:31:23,827 - #46 while
INFO  20:31:23,828 - #26 (
INFO  20:31:23,828 - #47 i
INFO  20:31:23,828 - #27 <
INFO  20:31:23,828 - #48 5
INFO  20:31:23,829 - #41 )
INFO  20:31:23,829 - #25 {
INFO  20:31:23,829 - #21 if
INFO  20:31:23,829 - #26 (
INFO  20:31:23,830 - #47 i
INFO  20:31:23,830 - #16 ==
INFO  20:31:23,830 - #48 2
INFO  20:31:23,830 - #41 )
INFO  20:31:23,830 - #47 ibool
INFO  20:31:23,830 - #4 =
INFO  20:31:23,830 - #49 true
INFO  20:31:23,830 - #43 ;
INFO  20:31:23,830 - #47 i
INFO  20:31:23,830 - #23 ++
INFO  20:31:23,830 - #43 ;
INFO  20:31:23,830 - #38 }
INFO  20:31:23,831 - #21 if
INFO  20:31:23,831 - #26 (
INFO  20:31:23,831 - #47 ibool
INFO  20:31:23,831 - #41 )
INFO  20:31:23,831 - #21 if
INFO  20:31:23,831 - #26 (
INFO  20:31:23,831 - #47 i
INFO  20:31:23,831 - #16 ==
INFO  20:31:23,831 - #48 5
INFO  20:31:23,831 - #41 )
INFO  20:31:23,832 - #36 print
INFO  20:31:23,832 - #26 (
INFO  20:31:23,832 - #48 1
INFO  20:31:23,832 - #41 )
INFO  20:31:23,832 - #43 ;
INFO  20:31:23,832 - #15 else
INFO  20:31:23,832 - #36 print
INFO  20:31:23,832 - #26 (
INFO  20:31:23,832 - #44 -
INFO  20:31:23,832 - #48 1
INFO  20:31:23,832 - #41 )
INFO  20:31:23,832 - #43 ;
INFO  20:31:23,832 - #47 a
INFO  20:31:23,832 - #4 =
INFO  20:31:23,832 - #48 2
INFO  20:31:23,833 - #43 ;
INFO  20:31:23,833 - #47 niz
INFO  20:31:23,833 - #4 =
INFO  20:31:23,833 - #33 new
INFO  20:31:23,833 - #47 int
INFO  20:31:23,833 - #28 [
INFO  20:31:23,833 - #48 3
INFO  20:31:23,833 - #42 ]
INFO  20:31:23,833 - #43 ;
INFO  20:31:23,833 - #47 niz
INFO  20:31:23,834 - #28 [
INFO  20:31:23,834 - #48 0
INFO  20:31:23,834 - #42 ]
INFO  20:31:23,834 - #4 =
INFO  20:31:23,834 - #48 1
INFO  20:31:23,834 - #31 *
INFO  20:31:23,834 - #47 a
INFO  20:31:23,838 - #43 ;
INFO  20:31:23,838 - #47 niz
INFO  20:31:23,838 - #28 [
INFO  20:31:23,838 - #48 1
INFO  20:31:23,838 - #42 ]
INFO  20:31:23,838 - #4 =
INFO  20:31:23,838 - #48 2
INFO  20:31:23,838 - #31 *
INFO  20:31:23,838 - #47 a
INFO  20:31:23,838 - #43 ;
INFO  20:31:23,838 - #47 niz
INFO  20:31:23,839 - #28 [
INFO  20:31:23,839 - #48 2
INFO  20:31:23,839 - #42 ]
INFO  20:31:23,839 - #4 =
INFO  20:31:23,839 - #47 sum
INFO  20:31:23,839 - #26 (
INFO  20:31:23,839 - #47 niz
INFO  20:31:23,839 - #28 [
INFO  20:31:23,839 - #48 1
INFO  20:31:23,839 - #42 ]
INFO  20:31:23,839 - #8 ,
INFO  20:31:23,839 - #47 niz
INFO  20:31:23,839 - #28 [
INFO  20:31:23,839 - #48 0
INFO  20:31:23,840 - #42 ]
INFO  20:31:23,840 - #41 )
INFO  20:31:23,840 - #31 *
INFO  20:31:23,840 - #47 a
INFO  20:31:23,840 - #2 +
INFO  20:31:23,840 - #48 1
INFO  20:31:23,840 - #43 ;
INFO  20:31:23,840 - #21 if
INFO  20:31:23,840 - #26 (
INFO  20:31:23,840 - #47 verify
INFO  20:31:23,840 - #26 (
INFO  20:31:23,840 - #41 )
INFO  20:31:23,840 - #35 ||
INFO  20:31:23,841 - #47 niz
INFO  20:31:23,841 - #28 [
INFO  20:31:23,841 - #48 2
INFO  20:31:23,841 - #42 ]
INFO  20:31:23,841 - #16 ==
INFO  20:31:23,841 - #48 4
INFO  20:31:23,841 - #41 )
INFO  20:31:23,841 - #36 print
INFO  20:31:23,841 - #26 (
INFO  20:31:23,841 - #47 ord
INFO  20:31:23,841 - #26 (
INFO  20:31:23,841 - #50 A
INFO  20:31:23,841 - #41 )
INFO  20:31:23,842 - #41 )
INFO  20:31:23,842 - #43 ;
INFO  20:31:23,842 - #15 else
INFO  20:31:23,842 - #36 print
INFO  20:31:23,842 - #26 (
INFO  20:31:23,842 - #47 ord
INFO  20:31:23,842 - #26 (
INFO  20:31:23,842 - #50 a
INFO  20:31:23,842 - #41 )
INFO  20:31:23,842 - #41 )
INFO  20:31:23,842 - #43 ;
INFO  20:31:23,842 - #36 print
INFO  20:31:23,843 - #26 (
INFO  20:31:23,843 - #47 eol
INFO  20:31:23,843 - #41 )
INFO  20:31:23,843 - #43 ;
INFO  20:31:23,843 - #47 i
INFO  20:31:23,843 - #4 =
INFO  20:31:23,843 - #48 0
INFO  20:31:23,843 - #43 ;
INFO  20:31:23,843 - #46 while
INFO  20:31:23,844 - #26 (
INFO  20:31:23,844 - #47 i
INFO  20:31:23,844 - #27 <
INFO  20:31:23,844 - #48 10
INFO  20:31:23,844 - #41 )
INFO  20:31:23,844 - #25 {
INFO  20:31:23,844 - #21 if
INFO  20:31:23,844 - #26 (
INFO  20:31:23,844 - #47 i
INFO  20:31:23,844 - #16 ==
INFO  20:31:23,844 - #48 3
INFO  20:31:23,844 - #41 )
INFO  20:31:23,844 - #25 {
INFO  20:31:23,844 - #47 i
INFO  20:31:23,844 - #23 ++
INFO  20:31:23,845 - #43 ;
INFO  20:31:23,845 - #10 continue
INFO  20:31:23,845 - #43 ;
INFO  20:31:23,845 - #38 }
INFO  20:31:23,846 - #21 if
INFO  20:31:23,846 - #26 (
INFO  20:31:23,846 - #47 i
INFO  20:31:23,846 - #16 ==
INFO  20:31:23,846 - #48 4
INFO  20:31:23,846 - #41 )
INFO  20:31:23,846 - #5 break
INFO  20:31:23,846 - #43 ;
INFO  20:31:23,846 - #47 i
INFO  20:31:23,847 - #4 =
INFO  20:31:23,847 - #47 inkrement
INFO  20:31:23,847 - #26 (
INFO  20:31:23,847 - #47 i
INFO  20:31:23,847 - #8 ,
INFO  20:31:23,848 - #48 1
INFO  20:31:23,848 - #41 )
INFO  20:31:23,848 - #43 ;
INFO  20:31:23,848 - #38 }
INFO  20:31:23,848 - #21 if
INFO  20:31:23,848 - #26 (
INFO  20:31:23,848 - #47 i
INFO  20:31:23,848 - #16 ==
INFO  20:31:23,848 - #48 3
INFO  20:31:23,848 - #3 &&
INFO  20:31:23,848 - #47 verify
INFO  20:31:23,848 - #26 (
INFO  20:31:23,848 - #41 )
INFO  20:31:23,848 - #41 )
INFO  20:31:23,848 - #36 print
INFO  20:31:23,849 - #26 (
INFO  20:31:23,849 - #44 -
INFO  20:31:23,849 - #48 4
INFO  20:31:23,849 - #41 )
INFO  20:31:23,849 - #43 ;
INFO  20:31:23,849 - #15 else
INFO  20:31:23,849 - #36 print
INFO  20:31:23,849 - #26 (
INFO  20:31:23,849 - #48 4
INFO  20:31:23,849 - #41 )
INFO  20:31:23,849 - #43 ;
INFO  20:31:23,849 - #39 read
INFO  20:31:23,849 - #26 (
INFO  20:31:23,849 - #47 niz
INFO  20:31:23,849 - #28 [
INFO  20:31:23,849 - #48 0
INFO  20:31:23,849 - #42 ]
INFO  20:31:23,849 - #41 )
INFO  20:31:23,850 - #43 ;
INFO  20:31:23,850 - #39 read
INFO  20:31:23,850 - #26 (
INFO  20:31:23,850 - #47 niz
INFO  20:31:23,850 - #28 [
INFO  20:31:23,850 - #48 1
INFO  20:31:23,850 - #42 ]
INFO  20:31:23,850 - #41 )
INFO  20:31:23,850 - #43 ;
INFO  20:31:23,850 - #39 read
INFO  20:31:23,850 - #26 (
INFO  20:31:23,850 - #47 niz
INFO  20:31:23,850 - #28 [
INFO  20:31:23,850 - #48 2
INFO  20:31:23,850 - #42 ]
INFO  20:31:23,850 - #41 )
INFO  20:31:23,850 - #43 ;
INFO  20:31:23,851 - #36 print
INFO  20:31:23,851 - #26 (
INFO  20:31:23,851 - #47 eol
INFO  20:31:23,851 - #41 )
INFO  20:31:23,851 - #43 ;
INFO  20:31:23,851 - #36 print
INFO  20:31:23,851 - #26 (
INFO  20:31:23,851 - #47 sum
INFO  20:31:23,851 - #26 (
INFO  20:31:23,851 - #47 sum
INFO  20:31:23,851 - #26 (
INFO  20:31:23,851 - #47 niz
INFO  20:31:23,851 - #28 [
INFO  20:31:23,851 - #48 0
INFO  20:31:23,851 - #42 ]
INFO  20:31:23,851 - #8 ,
INFO  20:31:23,851 - #47 niz
INFO  20:31:23,851 - #28 [
INFO  20:31:23,851 - #48 1
INFO  20:31:23,851 - #42 ]
INFO  20:31:23,852 - #41 )
INFO  20:31:23,852 - #8 ,
INFO  20:31:23,852 - #47 niz
INFO  20:31:23,852 - #28 [
INFO  20:31:23,852 - #48 2
INFO  20:31:23,852 - #42 ]
INFO  20:31:23,852 - #41 )
INFO  20:31:23,852 - #41 )
INFO  20:31:23,852 - #43 ;
INFO  20:31:23,852 - #36 print
INFO  20:31:23,852 - #26 (
INFO  20:31:23,852 - #47 eol
INFO  20:31:23,852 - #41 )
INFO  20:31:23,852 - #43 ;
INFO  20:31:23,852 - #36 print
INFO  20:31:23,853 - #26 (
INFO  20:31:23,853 - #47 inkrement
INFO  20:31:23,853 - #26 (
INFO  20:31:23,853 - #47 niz
INFO  20:31:23,853 - #28 [
INFO  20:31:23,853 - #48 2
INFO  20:31:23,853 - #42 ]
INFO  20:31:23,853 - #8 ,
INFO  20:31:23,853 - #48 2
INFO  20:31:23,853 - #41 )
INFO  20:31:23,853 - #41 )
INFO  20:31:23,853 - #43 ;
INFO  20:31:23,853 - #47 a
INFO  20:31:23,853 - #4 =
INFO  20:31:23,853 - #48 3
INFO  20:31:23,853 - #43 ;
INFO  20:31:23,853 - #47 i
INFO  20:31:23,853 - #4 =
INFO  20:31:23,853 - #48 0
INFO  20:31:23,854 - #43 ;
INFO  20:31:23,854 - #46 while
INFO  20:31:23,854 - #26 (
INFO  20:31:23,854 - #47 i
INFO  20:31:23,854 - #27 <
INFO  20:31:23,854 - #48 3
INFO  20:31:23,854 - #41 )
INFO  20:31:23,854 - #25 {
INFO  20:31:23,854 - #47 niz
INFO  20:31:23,854 - #28 [
INFO  20:31:23,854 - #47 i
INFO  20:31:23,854 - #42 ]
INFO  20:31:23,854 - #4 =
INFO  20:31:23,854 - #47 niz
INFO  20:31:23,854 - #28 [
INFO  20:31:23,854 - #47 i
INFO  20:31:23,854 - #42 ]
INFO  20:31:23,854 - #31 *
INFO  20:31:23,855 - #48 2
INFO  20:31:23,855 - #31 *
INFO  20:31:23,855 - #47 a
INFO  20:31:23,855 - #43 ;
INFO  20:31:23,855 - #47 i
INFO  20:31:23,855 - #23 ++
INFO  20:31:23,855 - #43 ;
INFO  20:31:23,855 - #38 }
INFO  20:31:23,855 - #47 niz
INFO  20:31:23,855 - #14 .
INFO  20:31:23,855 - #18 foreach
ERROR 20:31:23,855 - 
Sintaksna greska na liniji 92
ERROR 20:31:23,855 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 92
