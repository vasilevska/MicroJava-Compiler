INFO  12:35:28,861 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  12:35:28,951 - #36 program
INFO  12:35:28,951 - #46 test302
INFO  12:35:28,951 - #9 const
INFO  12:35:28,954 - #46 int
INFO  12:35:28,954 - #46 jedan
INFO  12:35:28,956 - #4 =
INFO  12:35:28,956 - #47 1
INFO  12:35:28,957 - #42 ;
INFO  12:35:28,960 - #46 int
INFO  12:35:28,961 - #46 i
INFO  12:35:28,961 - #42 ;
INFO  12:35:28,964 - #46 bool
INFO  12:35:28,965 - #46 ibool
INFO  12:35:28,965 - #42 ;
INFO  12:35:28,965 - #46 int
INFO  12:35:28,966 - #46 niz2
INFO  12:35:28,966 - #42 ;
INFO  12:35:28,966 - #46 int
INFO  12:35:28,966 - #46 niz
INFO  12:35:28,967 - #27 [
INFO  12:35:28,967 - #41 ]
INFO  12:35:28,967 - #42 ;
INFO  12:35:28,972 - #46 int
INFO  12:35:28,972 - #46 a
INFO  12:35:28,973 - #8 ,
INFO  12:35:28,973 - #46 curr
INFO  12:35:28,973 - #42 ;
INFO  12:35:28,974 - #24 {
INFO  12:35:28,974 - #46 int
INFO  12:35:28,976 - #46 sum
INFO  12:35:28,976 - #25 (
INFO  12:35:28,977 - #46 int
INFO  12:35:28,977 - #46 z
INFO  12:35:28,977 - #8 ,
INFO  12:35:28,979 - #46 int
INFO  12:35:28,979 - #46 d
INFO  12:35:28,979 - #40 )
INFO  12:35:28,981 - #24 {
INFO  12:35:28,982 - #39 return
INFO  12:35:28,983 - #46 z
INFO  12:35:28,984 - #2 +
INFO  12:35:28,988 - #46 d
INFO  12:35:28,991 - #42 ;
INFO  12:35:28,992 - #37 }
INFO  12:35:28,993 - #46 int
INFO  12:35:28,994 - #46 inkrement
INFO  12:35:28,994 - #25 (
INFO  12:35:28,994 - #46 int
INFO  12:35:28,994 - #46 a
INFO  12:35:28,995 - #8 ,
INFO  12:35:28,995 - #46 int
INFO  12:35:28,995 - #46 inc
INFO  12:35:28,995 - #40 )
INFO  12:35:28,996 - #46 int
INFO  12:35:28,996 - #46 pom
INFO  12:35:28,996 - #42 ;
INFO  12:35:28,996 - #24 {
INFO  12:35:28,997 - #20 if
INFO  12:35:28,997 - #25 (
INFO  12:35:28,998 - #46 inc
INFO  12:35:29,001 - #15 ==
INFO  12:35:29,001 - #46 jedan
INFO  12:35:29,003 - #40 )
INFO  12:35:29,006 - #46 pom
INFO  12:35:29,006 - #4 =
INFO  12:35:29,007 - #47 1
INFO  12:35:29,007 - #42 ;
INFO  12:35:29,007 - #14 else
INFO  12:35:29,007 - #20 if
INFO  12:35:29,008 - #25 (
INFO  12:35:29,008 - #46 inc
INFO  12:35:29,008 - #15 ==
INFO  12:35:29,009 - #47 2
INFO  12:35:29,009 - #40 )
INFO  12:35:29,009 - #46 pom
INFO  12:35:29,009 - #4 =
INFO  12:35:29,009 - #46 a
INFO  12:35:29,009 - #42 ;
INFO  12:35:29,009 - #39 return
INFO  12:35:29,011 - #46 sum
INFO  12:35:29,011 - #25 (
INFO  12:35:29,011 - #46 a
INFO  12:35:29,011 - #8 ,
INFO  12:35:29,012 - #46 pom
INFO  12:35:29,013 - #40 )
INFO  12:35:29,015 - #42 ;
INFO  12:35:29,015 - #37 }
INFO  12:35:29,015 - #46 bool
INFO  12:35:29,016 - #46 verify
INFO  12:35:29,016 - #25 (
INFO  12:35:29,016 - #40 )
INFO  12:35:29,018 - #24 {
INFO  12:35:29,018 - #35 print
INFO  12:35:29,018 - #25 (
INFO  12:35:29,018 - #49 v
INFO  12:35:29,019 - #40 )
INFO  12:35:29,019 - #42 ;
INFO  12:35:29,019 - #39 return
INFO  12:35:29,019 - #48 false
INFO  12:35:29,019 - #42 ;
INFO  12:35:29,020 - #37 }
INFO  12:35:29,020 - #44 void
INFO  12:35:29,020 - #46 main
INFO  12:35:29,020 - #25 (
INFO  12:35:29,021 - #40 )
INFO  12:35:29,021 - #24 {
INFO  12:35:29,021 - #46 i
INFO  12:35:29,021 - #4 =
INFO  12:35:29,021 - #47 0
INFO  12:35:29,021 - #42 ;
INFO  12:35:29,021 - #45 while
INFO  12:35:29,022 - #25 (
INFO  12:35:29,023 - #46 i
INFO  12:35:29,023 - #26 <
INFO  12:35:29,023 - #47 10
INFO  12:35:29,024 - #40 )
INFO  12:35:29,025 - #24 {
INFO  12:35:29,025 - #35 print
INFO  12:35:29,025 - #25 (
INFO  12:35:29,025 - #46 i
INFO  12:35:29,025 - #40 )
INFO  12:35:29,025 - #42 ;
INFO  12:35:29,026 - #46 i
INFO  12:35:29,026 - #22 ++
INFO  12:35:29,026 - #35 print
ERROR 12:35:29,026 - 
Sintaksna greska na liniji 52
ERROR 12:35:29,026 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 52
