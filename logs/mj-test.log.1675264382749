INFO  16:10:18,421 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  16:10:18,466 - #37 program
INFO  16:10:18,467 - #47 test302
INFO  16:10:18,467 - #9 const
INFO  16:10:18,468 - #47 int
INFO  16:10:18,468 - #47 jedan
INFO  16:10:18,468 - #4 =
INFO  16:10:18,468 - #48 1
INFO  16:10:18,469 - #43 ;
INFO  16:10:18,470 - #47 int
INFO  16:10:18,470 - #47 i
INFO  16:10:18,470 - #43 ;
INFO  16:10:18,472 - #47 bool
INFO  16:10:18,472 - #47 ibool
INFO  16:10:18,472 - #43 ;
INFO  16:10:18,472 - #47 int
INFO  16:10:18,473 - #47 niz2
INFO  16:10:18,473 - #43 ;
INFO  16:10:18,473 - #47 int
INFO  16:10:18,473 - #47 niz
INFO  16:10:18,473 - #28 [
INFO  16:10:18,473 - #42 ]
INFO  16:10:18,473 - #43 ;
INFO  16:10:18,478 - #47 int
INFO  16:10:18,478 - #47 a
INFO  16:10:18,478 - #8 ,
INFO  16:10:18,478 - #47 curr
INFO  16:10:18,478 - #43 ;
INFO  16:10:18,478 - #25 {
INFO  16:10:18,478 - #47 int
INFO  16:10:18,479 - #47 sum
INFO  16:10:18,479 - #26 (
INFO  16:10:18,479 - #47 int
INFO  16:10:18,479 - #47 z
INFO  16:10:18,479 - #8 ,
INFO  16:10:18,480 - #47 int
INFO  16:10:18,480 - #47 d
INFO  16:10:18,480 - #41 )
INFO  16:10:18,481 - #25 {
INFO  16:10:18,482 - #40 return
INFO  16:10:18,482 - #47 z
INFO  16:10:18,482 - #2 +
INFO  16:10:18,486 - #47 d
INFO  16:10:18,487 - #43 ;
INFO  16:10:18,487 - #38 }
INFO  16:10:18,487 - #47 int
INFO  16:10:18,487 - #47 inkrement
INFO  16:10:18,487 - #26 (
INFO  16:10:18,487 - #47 int
INFO  16:10:18,487 - #47 a
INFO  16:10:18,488 - #8 ,
INFO  16:10:18,488 - #47 int
INFO  16:10:18,488 - #47 inc
INFO  16:10:18,488 - #41 )
INFO  16:10:18,488 - #47 int
INFO  16:10:18,488 - #47 pom
INFO  16:10:18,488 - #43 ;
INFO  16:10:18,488 - #25 {
INFO  16:10:18,488 - #21 if
INFO  16:10:18,488 - #26 (
INFO  16:10:18,488 - #47 inc
INFO  16:10:18,488 - #16 ==
INFO  16:10:18,488 - #47 jedan
INFO  16:10:18,489 - #41 )
INFO  16:10:18,491 - #47 pom
INFO  16:10:18,491 - #4 =
INFO  16:10:18,491 - #48 1
INFO  16:10:18,491 - #43 ;
INFO  16:10:18,492 - #15 else
INFO  16:10:18,492 - #21 if
INFO  16:10:18,492 - #26 (
INFO  16:10:18,492 - #47 inc
INFO  16:10:18,492 - #16 ==
INFO  16:10:18,492 - #48 2
INFO  16:10:18,492 - #41 )
INFO  16:10:18,492 - #47 pom
INFO  16:10:18,492 - #4 =
INFO  16:10:18,492 - #47 a
INFO  16:10:18,492 - #43 ;
INFO  16:10:18,492 - #40 return
INFO  16:10:18,493 - #47 sum
INFO  16:10:18,493 - #26 (
INFO  16:10:18,493 - #47 a
INFO  16:10:18,493 - #8 ,
INFO  16:10:18,493 - #47 pom
INFO  16:10:18,493 - #41 )
INFO  16:10:18,494 - #43 ;
INFO  16:10:18,494 - #38 }
INFO  16:10:18,494 - #47 bool
INFO  16:10:18,494 - #47 verify
INFO  16:10:18,494 - #26 (
INFO  16:10:18,494 - #41 )
INFO  16:10:18,495 - #25 {
INFO  16:10:18,495 - #36 print
INFO  16:10:18,495 - #26 (
INFO  16:10:18,495 - #50 v
INFO  16:10:18,495 - #41 )
INFO  16:10:18,495 - #43 ;
INFO  16:10:18,495 - #40 return
INFO  16:10:18,495 - #49 false
INFO  16:10:18,496 - #43 ;
INFO  16:10:18,496 - #38 }
INFO  16:10:18,496 - #45 void
INFO  16:10:18,496 - #47 main
INFO  16:10:18,496 - #26 (
INFO  16:10:18,496 - #41 )
INFO  16:10:18,496 - #25 {
INFO  16:10:18,496 - #21 if
INFO  16:10:18,496 - #26 (
INFO  16:10:18,496 - #48 1
INFO  16:10:18,496 - #32 !=
INFO  16:10:18,496 - #48 1
INFO  16:10:18,497 - #41 )
INFO  16:10:18,497 - #36 print
INFO  16:10:18,497 - #26 (
INFO  16:10:18,497 - #44 -
INFO  16:10:18,497 - #48 6
INFO  16:10:18,497 - #41 )
INFO  16:10:18,497 - #43 ;
INFO  16:10:18,497 - #15 else
INFO  16:10:18,497 - #36 print
INFO  16:10:18,497 - #26 (
INFO  16:10:18,497 - #48 0
INFO  16:10:18,498 - #41 )
INFO  16:10:18,498 - #43 ;
INFO  16:10:18,498 - #47 ibool
INFO  16:10:18,498 - #4 =
INFO  16:10:18,498 - #49 false
INFO  16:10:18,498 - #43 ;
INFO  16:10:18,498 - #47 i
INFO  16:10:18,498 - #4 =
INFO  16:10:18,498 - #48 0
INFO  16:10:18,498 - #43 ;
INFO  16:10:18,498 - #46 while
INFO  16:10:18,498 - #26 (
INFO  16:10:18,498 - #47 i
INFO  16:10:18,498 - #27 <
INFO  16:10:18,498 - #48 5
INFO  16:10:18,499 - #41 )
INFO  16:10:18,499 - #25 {
INFO  16:10:18,499 - #21 if
INFO  16:10:18,499 - #26 (
INFO  16:10:18,499 - #47 i
INFO  16:10:18,499 - #16 ==
INFO  16:10:18,499 - #48 2
INFO  16:10:18,499 - #41 )
INFO  16:10:18,499 - #47 ibool
INFO  16:10:18,499 - #4 =
INFO  16:10:18,499 - #49 true
INFO  16:10:18,499 - #43 ;
INFO  16:10:18,499 - #47 i
INFO  16:10:18,500 - #23 ++
INFO  16:10:18,500 - #43 ;
INFO  16:10:18,500 - #38 }
INFO  16:10:18,500 - #21 if
INFO  16:10:18,500 - #26 (
INFO  16:10:18,500 - #47 ibool
INFO  16:10:18,500 - #41 )
INFO  16:10:18,500 - #21 if
INFO  16:10:18,500 - #26 (
INFO  16:10:18,500 - #47 i
INFO  16:10:18,500 - #16 ==
INFO  16:10:18,500 - #48 5
INFO  16:10:18,500 - #41 )
INFO  16:10:18,500 - #36 print
INFO  16:10:18,500 - #26 (
INFO  16:10:18,500 - #48 1
INFO  16:10:18,501 - #41 )
INFO  16:10:18,501 - #43 ;
INFO  16:10:18,501 - #15 else
INFO  16:10:18,501 - #36 print
INFO  16:10:18,501 - #26 (
INFO  16:10:18,501 - #44 -
INFO  16:10:18,501 - #48 1
INFO  16:10:18,501 - #41 )
INFO  16:10:18,501 - #43 ;
INFO  16:10:18,501 - #47 a
INFO  16:10:18,501 - #4 =
INFO  16:10:18,501 - #48 2
INFO  16:10:18,501 - #43 ;
INFO  16:10:18,501 - #47 niz
INFO  16:10:18,501 - #4 =
INFO  16:10:18,501 - #33 new
INFO  16:10:18,501 - #47 int
INFO  16:10:18,501 - #28 [
INFO  16:10:18,501 - #48 3
INFO  16:10:18,501 - #42 ]
INFO  16:10:18,501 - #43 ;
INFO  16:10:18,501 - #47 niz
INFO  16:10:18,502 - #28 [
INFO  16:10:18,502 - #48 0
INFO  16:10:18,502 - #42 ]
INFO  16:10:18,502 - #4 =
INFO  16:10:18,502 - #48 1
INFO  16:10:18,502 - #31 *
INFO  16:10:18,502 - #47 a
INFO  16:10:18,503 - #43 ;
INFO  16:10:18,503 - #47 niz
INFO  16:10:18,503 - #28 [
INFO  16:10:18,503 - #48 1
INFO  16:10:18,503 - #42 ]
INFO  16:10:18,503 - #4 =
INFO  16:10:18,503 - #48 2
INFO  16:10:18,503 - #31 *
INFO  16:10:18,503 - #47 a
INFO  16:10:18,503 - #43 ;
INFO  16:10:18,503 - #47 niz
INFO  16:10:18,504 - #28 [
INFO  16:10:18,504 - #48 2
INFO  16:10:18,504 - #42 ]
INFO  16:10:18,504 - #4 =
INFO  16:10:18,504 - #47 sum
INFO  16:10:18,504 - #26 (
INFO  16:10:18,504 - #47 niz
INFO  16:10:18,504 - #28 [
INFO  16:10:18,504 - #48 1
INFO  16:10:18,504 - #42 ]
INFO  16:10:18,504 - #8 ,
INFO  16:10:18,504 - #47 niz
INFO  16:10:18,504 - #28 [
INFO  16:10:18,504 - #48 0
INFO  16:10:18,504 - #42 ]
INFO  16:10:18,504 - #41 )
INFO  16:10:18,504 - #31 *
INFO  16:10:18,504 - #47 a
INFO  16:10:18,504 - #2 +
INFO  16:10:18,504 - #48 1
INFO  16:10:18,504 - #43 ;
INFO  16:10:18,504 - #21 if
INFO  16:10:18,504 - #26 (
INFO  16:10:18,504 - #47 verify
INFO  16:10:18,504 - #26 (
INFO  16:10:18,504 - #41 )
INFO  16:10:18,504 - #35 ||
INFO  16:10:18,504 - #47 niz
INFO  16:10:18,505 - #28 [
INFO  16:10:18,505 - #48 2
INFO  16:10:18,505 - #42 ]
INFO  16:10:18,505 - #16 ==
INFO  16:10:18,505 - #48 4
INFO  16:10:18,505 - #41 )
INFO  16:10:18,505 - #36 print
INFO  16:10:18,505 - #26 (
INFO  16:10:18,505 - #47 ord
INFO  16:10:18,505 - #26 (
INFO  16:10:18,505 - #50 A
INFO  16:10:18,505 - #41 )
INFO  16:10:18,505 - #41 )
INFO  16:10:18,505 - #43 ;
INFO  16:10:18,505 - #15 else
INFO  16:10:18,505 - #36 print
INFO  16:10:18,505 - #26 (
INFO  16:10:18,505 - #47 ord
INFO  16:10:18,505 - #26 (
INFO  16:10:18,505 - #50 a
INFO  16:10:18,505 - #41 )
INFO  16:10:18,505 - #41 )
INFO  16:10:18,505 - #43 ;
INFO  16:10:18,505 - #36 print
INFO  16:10:18,505 - #26 (
INFO  16:10:18,505 - #47 eol
INFO  16:10:18,505 - #41 )
INFO  16:10:18,506 - #43 ;
INFO  16:10:18,506 - #47 i
INFO  16:10:18,506 - #4 =
INFO  16:10:18,506 - #48 0
INFO  16:10:18,506 - #43 ;
INFO  16:10:18,506 - #46 while
INFO  16:10:18,506 - #26 (
INFO  16:10:18,506 - #47 i
INFO  16:10:18,506 - #27 <
INFO  16:10:18,506 - #48 10
INFO  16:10:18,506 - #41 )
INFO  16:10:18,506 - #25 {
INFO  16:10:18,506 - #21 if
INFO  16:10:18,506 - #26 (
INFO  16:10:18,506 - #47 i
INFO  16:10:18,506 - #16 ==
INFO  16:10:18,506 - #48 3
INFO  16:10:18,506 - #41 )
INFO  16:10:18,506 - #25 {
INFO  16:10:18,506 - #47 i
INFO  16:10:18,506 - #23 ++
INFO  16:10:18,506 - #43 ;
INFO  16:10:18,506 - #10 continue
INFO  16:10:18,506 - #43 ;
INFO  16:10:18,506 - #38 }
INFO  16:10:18,507 - #21 if
INFO  16:10:18,507 - #26 (
INFO  16:10:18,507 - #47 i
INFO  16:10:18,507 - #16 ==
INFO  16:10:18,507 - #48 4
INFO  16:10:18,507 - #41 )
INFO  16:10:18,507 - #5 break
INFO  16:10:18,507 - #43 ;
INFO  16:10:18,508 - #47 i
INFO  16:10:18,508 - #4 =
INFO  16:10:18,508 - #47 inkrement
INFO  16:10:18,508 - #26 (
INFO  16:10:18,508 - #47 i
INFO  16:10:18,508 - #8 ,
INFO  16:10:18,508 - #48 1
INFO  16:10:18,508 - #41 )
INFO  16:10:18,508 - #43 ;
INFO  16:10:18,508 - #38 }
INFO  16:10:18,508 - #21 if
INFO  16:10:18,509 - #26 (
INFO  16:10:18,509 - #47 i
INFO  16:10:18,509 - #16 ==
INFO  16:10:18,509 - #48 3
INFO  16:10:18,509 - #3 &&
INFO  16:10:18,509 - #47 verify
INFO  16:10:18,509 - #26 (
INFO  16:10:18,509 - #41 )
INFO  16:10:18,509 - #41 )
INFO  16:10:18,509 - #36 print
INFO  16:10:18,509 - #26 (
INFO  16:10:18,509 - #44 -
INFO  16:10:18,509 - #48 4
INFO  16:10:18,509 - #41 )
INFO  16:10:18,509 - #43 ;
INFO  16:10:18,509 - #15 else
INFO  16:10:18,509 - #36 print
INFO  16:10:18,509 - #26 (
INFO  16:10:18,509 - #48 4
INFO  16:10:18,509 - #41 )
INFO  16:10:18,509 - #43 ;
INFO  16:10:18,509 - #39 read
INFO  16:10:18,509 - #26 (
INFO  16:10:18,509 - #47 niz
INFO  16:10:18,509 - #28 [
INFO  16:10:18,509 - #48 0
INFO  16:10:18,509 - #42 ]
INFO  16:10:18,509 - #41 )
INFO  16:10:18,509 - #43 ;
INFO  16:10:18,510 - #39 read
INFO  16:10:18,510 - #26 (
INFO  16:10:18,510 - #47 niz
INFO  16:10:18,510 - #28 [
INFO  16:10:18,510 - #48 1
INFO  16:10:18,510 - #42 ]
INFO  16:10:18,510 - #41 )
INFO  16:10:18,510 - #43 ;
INFO  16:10:18,510 - #39 read
INFO  16:10:18,510 - #26 (
INFO  16:10:18,510 - #47 niz
INFO  16:10:18,510 - #28 [
INFO  16:10:18,510 - #48 2
INFO  16:10:18,510 - #42 ]
INFO  16:10:18,510 - #41 )
INFO  16:10:18,510 - #43 ;
INFO  16:10:18,510 - #36 print
INFO  16:10:18,510 - #26 (
INFO  16:10:18,510 - #47 eol
INFO  16:10:18,510 - #41 )
INFO  16:10:18,510 - #43 ;
INFO  16:10:18,510 - #36 print
INFO  16:10:18,510 - #26 (
INFO  16:10:18,510 - #47 sum
INFO  16:10:18,510 - #26 (
INFO  16:10:18,510 - #47 sum
INFO  16:10:18,510 - #26 (
INFO  16:10:18,510 - #47 niz
INFO  16:10:18,510 - #28 [
INFO  16:10:18,510 - #48 0
INFO  16:10:18,510 - #42 ]
INFO  16:10:18,510 - #8 ,
INFO  16:10:18,510 - #47 niz
INFO  16:10:18,510 - #28 [
INFO  16:10:18,510 - #48 1
INFO  16:10:18,510 - #42 ]
INFO  16:10:18,511 - #41 )
INFO  16:10:18,511 - #8 ,
INFO  16:10:18,511 - #47 niz
INFO  16:10:18,511 - #28 [
INFO  16:10:18,511 - #48 2
INFO  16:10:18,511 - #42 ]
INFO  16:10:18,511 - #41 )
INFO  16:10:18,511 - #41 )
INFO  16:10:18,511 - #43 ;
INFO  16:10:18,511 - #36 print
INFO  16:10:18,511 - #26 (
INFO  16:10:18,511 - #47 eol
INFO  16:10:18,511 - #41 )
INFO  16:10:18,511 - #43 ;
INFO  16:10:18,511 - #36 print
INFO  16:10:18,511 - #26 (
INFO  16:10:18,511 - #47 inkrement
INFO  16:10:18,511 - #26 (
INFO  16:10:18,511 - #47 niz
INFO  16:10:18,511 - #28 [
INFO  16:10:18,511 - #48 2
INFO  16:10:18,511 - #42 ]
INFO  16:10:18,511 - #8 ,
INFO  16:10:18,511 - #48 2
INFO  16:10:18,511 - #41 )
INFO  16:10:18,511 - #41 )
INFO  16:10:18,511 - #43 ;
INFO  16:10:18,511 - #47 a
INFO  16:10:18,511 - #4 =
INFO  16:10:18,511 - #48 3
INFO  16:10:18,511 - #43 ;
INFO  16:10:18,511 - #47 i
INFO  16:10:18,511 - #4 =
INFO  16:10:18,511 - #48 0
INFO  16:10:18,511 - #43 ;
INFO  16:10:18,512 - #46 while
INFO  16:10:18,512 - #26 (
INFO  16:10:18,512 - #47 i
INFO  16:10:18,512 - #27 <
INFO  16:10:18,512 - #48 3
INFO  16:10:18,512 - #41 )
INFO  16:10:18,512 - #25 {
INFO  16:10:18,512 - #47 niz
INFO  16:10:18,512 - #28 [
INFO  16:10:18,512 - #47 i
INFO  16:10:18,512 - #42 ]
INFO  16:10:18,512 - #4 =
INFO  16:10:18,512 - #47 niz
INFO  16:10:18,512 - #28 [
INFO  16:10:18,512 - #47 i
INFO  16:10:18,512 - #42 ]
INFO  16:10:18,512 - #31 *
INFO  16:10:18,512 - #48 2
INFO  16:10:18,512 - #31 *
INFO  16:10:18,512 - #47 a
INFO  16:10:18,512 - #43 ;
INFO  16:10:18,512 - #47 i
INFO  16:10:18,512 - #23 ++
INFO  16:10:18,512 - #43 ;
INFO  16:10:18,512 - #38 }
INFO  16:10:18,512 - #47 niz
INFO  16:10:18,512 - #14 .
INFO  16:10:18,512 - #18 foreach
ERROR 16:10:18,512 - 
Sintaksna greska na liniji 92
ERROR 16:10:18,512 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 92
