INFO  16:15:15,158 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  16:15:15,204 - #37 program
INFO  16:15:15,204 - #47 test302
INFO  16:15:15,204 - #9 const
INFO  16:15:15,205 - #47 int
INFO  16:15:15,205 - #47 jedan
INFO  16:15:15,206 - #4 =
INFO  16:15:15,206 - #48 1
INFO  16:15:15,206 - #43 ;
INFO  16:15:15,207 - #47 int
INFO  16:15:15,208 - #47 i
INFO  16:15:15,208 - #43 ;
INFO  16:15:15,209 - #47 bool
INFO  16:15:15,210 - #47 ibool
INFO  16:15:15,210 - #43 ;
INFO  16:15:15,210 - #47 int
INFO  16:15:15,210 - #47 niz2
INFO  16:15:15,210 - #43 ;
INFO  16:15:15,211 - #47 int
INFO  16:15:15,211 - #47 niz
INFO  16:15:15,211 - #28 [
INFO  16:15:15,211 - #42 ]
INFO  16:15:15,211 - #43 ;
INFO  16:15:15,215 - #47 int
INFO  16:15:15,216 - #47 a
INFO  16:15:15,216 - #8 ,
INFO  16:15:15,216 - #47 curr
INFO  16:15:15,216 - #43 ;
INFO  16:15:15,216 - #25 {
INFO  16:15:15,216 - #47 int
INFO  16:15:15,217 - #47 sum
INFO  16:15:15,217 - #26 (
INFO  16:15:15,217 - #47 int
INFO  16:15:15,217 - #47 z
INFO  16:15:15,217 - #8 ,
INFO  16:15:15,217 - #47 int
INFO  16:15:15,217 - #47 d
INFO  16:15:15,218 - #41 )
INFO  16:15:15,218 - #25 {
INFO  16:15:15,219 - #40 return
INFO  16:15:15,220 - #47 z
INFO  16:15:15,220 - #2 +
INFO  16:15:15,224 - #47 d
INFO  16:15:15,225 - #43 ;
INFO  16:15:15,225 - #38 }
INFO  16:15:15,225 - #47 int
INFO  16:15:15,226 - #47 inkrement
INFO  16:15:15,226 - #26 (
INFO  16:15:15,226 - #47 int
INFO  16:15:15,226 - #47 a
INFO  16:15:15,226 - #8 ,
INFO  16:15:15,226 - #47 int
INFO  16:15:15,226 - #47 inc
INFO  16:15:15,226 - #41 )
INFO  16:15:15,226 - #47 int
INFO  16:15:15,226 - #47 pom
INFO  16:15:15,226 - #43 ;
INFO  16:15:15,226 - #25 {
INFO  16:15:15,226 - #21 if
INFO  16:15:15,226 - #26 (
INFO  16:15:15,227 - #47 inc
INFO  16:15:15,227 - #16 ==
INFO  16:15:15,227 - #47 jedan
INFO  16:15:15,228 - #41 )
INFO  16:15:15,230 - #47 pom
INFO  16:15:15,230 - #4 =
INFO  16:15:15,230 - #48 1
INFO  16:15:15,230 - #43 ;
INFO  16:15:15,231 - #15 else
INFO  16:15:15,231 - #21 if
INFO  16:15:15,231 - #26 (
INFO  16:15:15,231 - #47 inc
INFO  16:15:15,231 - #16 ==
INFO  16:15:15,231 - #48 2
INFO  16:15:15,231 - #41 )
INFO  16:15:15,231 - #47 pom
INFO  16:15:15,231 - #4 =
INFO  16:15:15,231 - #47 a
INFO  16:15:15,231 - #43 ;
INFO  16:15:15,231 - #40 return
INFO  16:15:15,232 - #47 sum
INFO  16:15:15,232 - #26 (
INFO  16:15:15,232 - #47 a
INFO  16:15:15,232 - #8 ,
INFO  16:15:15,233 - #47 pom
INFO  16:15:15,233 - #41 )
INFO  16:15:15,233 - #43 ;
INFO  16:15:15,234 - #38 }
INFO  16:15:15,234 - #47 bool
INFO  16:15:15,234 - #47 verify
INFO  16:15:15,234 - #26 (
INFO  16:15:15,234 - #41 )
INFO  16:15:15,234 - #25 {
INFO  16:15:15,234 - #36 print
INFO  16:15:15,234 - #26 (
INFO  16:15:15,234 - #50 v
INFO  16:15:15,235 - #41 )
INFO  16:15:15,235 - #43 ;
INFO  16:15:15,235 - #40 return
INFO  16:15:15,235 - #49 false
INFO  16:15:15,235 - #43 ;
INFO  16:15:15,235 - #38 }
INFO  16:15:15,235 - #45 void
INFO  16:15:15,235 - #47 main
INFO  16:15:15,235 - #26 (
INFO  16:15:15,235 - #41 )
INFO  16:15:15,235 - #25 {
INFO  16:15:15,236 - #21 if
INFO  16:15:15,236 - #26 (
INFO  16:15:15,236 - #48 1
INFO  16:15:15,236 - #32 !=
INFO  16:15:15,236 - #48 1
INFO  16:15:15,236 - #41 )
INFO  16:15:15,236 - #36 print
INFO  16:15:15,236 - #26 (
INFO  16:15:15,237 - #44 -
INFO  16:15:15,237 - #48 6
INFO  16:15:15,237 - #41 )
INFO  16:15:15,237 - #43 ;
INFO  16:15:15,237 - #15 else
INFO  16:15:15,237 - #36 print
INFO  16:15:15,237 - #26 (
INFO  16:15:15,237 - #48 0
INFO  16:15:15,237 - #41 )
INFO  16:15:15,237 - #43 ;
INFO  16:15:15,237 - #47 ibool
INFO  16:15:15,237 - #4 =
INFO  16:15:15,237 - #49 false
INFO  16:15:15,237 - #43 ;
INFO  16:15:15,237 - #47 i
INFO  16:15:15,237 - #4 =
INFO  16:15:15,238 - #48 0
INFO  16:15:15,238 - #43 ;
INFO  16:15:15,238 - #46 while
INFO  16:15:15,238 - #26 (
INFO  16:15:15,238 - #47 i
INFO  16:15:15,238 - #27 <
INFO  16:15:15,238 - #48 5
INFO  16:15:15,238 - #41 )
INFO  16:15:15,238 - #25 {
INFO  16:15:15,239 - #21 if
INFO  16:15:15,239 - #26 (
INFO  16:15:15,239 - #47 i
INFO  16:15:15,239 - #16 ==
INFO  16:15:15,239 - #48 2
INFO  16:15:15,239 - #41 )
INFO  16:15:15,239 - #47 ibool
INFO  16:15:15,239 - #4 =
INFO  16:15:15,239 - #49 true
INFO  16:15:15,239 - #43 ;
INFO  16:15:15,239 - #47 i
INFO  16:15:15,239 - #23 ++
INFO  16:15:15,239 - #43 ;
INFO  16:15:15,239 - #38 }
INFO  16:15:15,239 - #21 if
INFO  16:15:15,239 - #26 (
INFO  16:15:15,239 - #47 ibool
INFO  16:15:15,239 - #41 )
INFO  16:15:15,240 - #21 if
INFO  16:15:15,240 - #26 (
INFO  16:15:15,240 - #47 i
INFO  16:15:15,240 - #16 ==
INFO  16:15:15,240 - #48 5
INFO  16:15:15,240 - #41 )
INFO  16:15:15,240 - #36 print
INFO  16:15:15,240 - #26 (
INFO  16:15:15,240 - #48 1
INFO  16:15:15,240 - #41 )
INFO  16:15:15,240 - #43 ;
INFO  16:15:15,240 - #15 else
INFO  16:15:15,240 - #36 print
INFO  16:15:15,240 - #26 (
INFO  16:15:15,240 - #44 -
INFO  16:15:15,240 - #48 1
INFO  16:15:15,240 - #41 )
INFO  16:15:15,240 - #43 ;
INFO  16:15:15,240 - #47 a
INFO  16:15:15,240 - #4 =
INFO  16:15:15,241 - #48 2
INFO  16:15:15,241 - #43 ;
INFO  16:15:15,241 - #47 niz
INFO  16:15:15,241 - #4 =
INFO  16:15:15,241 - #33 new
INFO  16:15:15,241 - #47 int
INFO  16:15:15,241 - #28 [
INFO  16:15:15,241 - #48 3
INFO  16:15:15,241 - #42 ]
INFO  16:15:15,241 - #43 ;
INFO  16:15:15,241 - #47 niz
INFO  16:15:15,241 - #28 [
INFO  16:15:15,241 - #48 0
INFO  16:15:15,241 - #42 ]
INFO  16:15:15,242 - #4 =
INFO  16:15:15,242 - #48 1
INFO  16:15:15,242 - #31 *
INFO  16:15:15,242 - #47 a
INFO  16:15:15,243 - #43 ;
INFO  16:15:15,244 - #47 niz
INFO  16:15:15,244 - #28 [
INFO  16:15:15,244 - #48 1
INFO  16:15:15,244 - #42 ]
INFO  16:15:15,244 - #4 =
INFO  16:15:15,244 - #48 2
INFO  16:15:15,244 - #31 *
INFO  16:15:15,244 - #47 a
INFO  16:15:15,244 - #43 ;
INFO  16:15:15,244 - #47 niz
INFO  16:15:15,244 - #28 [
INFO  16:15:15,244 - #48 2
INFO  16:15:15,244 - #42 ]
INFO  16:15:15,244 - #4 =
INFO  16:15:15,244 - #47 sum
INFO  16:15:15,244 - #26 (
INFO  16:15:15,244 - #47 niz
INFO  16:15:15,244 - #28 [
INFO  16:15:15,244 - #48 1
INFO  16:15:15,244 - #42 ]
INFO  16:15:15,245 - #8 ,
INFO  16:15:15,245 - #47 niz
INFO  16:15:15,245 - #28 [
INFO  16:15:15,245 - #48 0
INFO  16:15:15,245 - #42 ]
INFO  16:15:15,245 - #41 )
INFO  16:15:15,245 - #31 *
INFO  16:15:15,245 - #47 a
INFO  16:15:15,245 - #2 +
INFO  16:15:15,245 - #48 1
INFO  16:15:15,245 - #43 ;
INFO  16:15:15,245 - #21 if
INFO  16:15:15,245 - #26 (
INFO  16:15:15,245 - #47 verify
INFO  16:15:15,245 - #26 (
INFO  16:15:15,245 - #41 )
INFO  16:15:15,245 - #35 ||
INFO  16:15:15,245 - #47 niz
INFO  16:15:15,245 - #28 [
INFO  16:15:15,245 - #48 2
INFO  16:15:15,245 - #42 ]
INFO  16:15:15,245 - #16 ==
INFO  16:15:15,245 - #48 4
INFO  16:15:15,245 - #41 )
INFO  16:15:15,246 - #36 print
INFO  16:15:15,246 - #26 (
INFO  16:15:15,246 - #47 ord
INFO  16:15:15,246 - #26 (
INFO  16:15:15,246 - #50 A
INFO  16:15:15,246 - #41 )
INFO  16:15:15,246 - #41 )
INFO  16:15:15,246 - #43 ;
INFO  16:15:15,246 - #15 else
INFO  16:15:15,246 - #36 print
INFO  16:15:15,246 - #26 (
INFO  16:15:15,246 - #47 ord
INFO  16:15:15,246 - #26 (
INFO  16:15:15,246 - #50 a
INFO  16:15:15,246 - #41 )
INFO  16:15:15,246 - #41 )
INFO  16:15:15,246 - #43 ;
INFO  16:15:15,246 - #36 print
INFO  16:15:15,246 - #26 (
INFO  16:15:15,246 - #47 eol
INFO  16:15:15,246 - #41 )
INFO  16:15:15,246 - #43 ;
INFO  16:15:15,246 - #47 i
INFO  16:15:15,246 - #4 =
INFO  16:15:15,246 - #48 0
INFO  16:15:15,246 - #43 ;
INFO  16:15:15,246 - #46 while
INFO  16:15:15,246 - #26 (
INFO  16:15:15,246 - #47 i
INFO  16:15:15,247 - #27 <
INFO  16:15:15,247 - #48 10
INFO  16:15:15,247 - #41 )
INFO  16:15:15,247 - #25 {
INFO  16:15:15,247 - #21 if
INFO  16:15:15,247 - #26 (
INFO  16:15:15,247 - #47 i
INFO  16:15:15,247 - #16 ==
INFO  16:15:15,247 - #48 3
INFO  16:15:15,247 - #41 )
INFO  16:15:15,247 - #25 {
INFO  16:15:15,247 - #47 i
INFO  16:15:15,247 - #23 ++
INFO  16:15:15,247 - #43 ;
INFO  16:15:15,247 - #10 continue
INFO  16:15:15,247 - #43 ;
INFO  16:15:15,247 - #38 }
INFO  16:15:15,248 - #21 if
INFO  16:15:15,248 - #26 (
INFO  16:15:15,248 - #47 i
INFO  16:15:15,248 - #16 ==
INFO  16:15:15,248 - #48 4
INFO  16:15:15,248 - #41 )
INFO  16:15:15,248 - #5 break
INFO  16:15:15,248 - #43 ;
INFO  16:15:15,248 - #47 i
INFO  16:15:15,249 - #4 =
INFO  16:15:15,249 - #47 inkrement
INFO  16:15:15,249 - #26 (
INFO  16:15:15,249 - #47 i
INFO  16:15:15,249 - #8 ,
INFO  16:15:15,249 - #48 1
INFO  16:15:15,249 - #41 )
INFO  16:15:15,249 - #43 ;
INFO  16:15:15,249 - #38 }
INFO  16:15:15,249 - #21 if
INFO  16:15:15,249 - #26 (
INFO  16:15:15,249 - #47 i
INFO  16:15:15,249 - #16 ==
INFO  16:15:15,249 - #48 3
INFO  16:15:15,249 - #3 &&
INFO  16:15:15,249 - #47 verify
INFO  16:15:15,249 - #26 (
INFO  16:15:15,249 - #41 )
INFO  16:15:15,249 - #41 )
INFO  16:15:15,249 - #36 print
INFO  16:15:15,249 - #26 (
INFO  16:15:15,249 - #44 -
INFO  16:15:15,249 - #48 4
INFO  16:15:15,249 - #41 )
INFO  16:15:15,249 - #43 ;
INFO  16:15:15,249 - #15 else
INFO  16:15:15,250 - #36 print
INFO  16:15:15,250 - #26 (
INFO  16:15:15,250 - #48 4
INFO  16:15:15,250 - #41 )
INFO  16:15:15,250 - #43 ;
INFO  16:15:15,250 - #39 read
INFO  16:15:15,250 - #26 (
INFO  16:15:15,250 - #47 niz
INFO  16:15:15,250 - #28 [
INFO  16:15:15,250 - #48 0
INFO  16:15:15,250 - #42 ]
INFO  16:15:15,250 - #41 )
INFO  16:15:15,250 - #43 ;
INFO  16:15:15,250 - #39 read
INFO  16:15:15,250 - #26 (
INFO  16:15:15,250 - #47 niz
INFO  16:15:15,250 - #28 [
INFO  16:15:15,250 - #48 1
INFO  16:15:15,250 - #42 ]
INFO  16:15:15,250 - #41 )
INFO  16:15:15,250 - #43 ;
INFO  16:15:15,250 - #39 read
INFO  16:15:15,250 - #26 (
INFO  16:15:15,250 - #47 niz
INFO  16:15:15,250 - #28 [
INFO  16:15:15,250 - #48 2
INFO  16:15:15,250 - #42 ]
INFO  16:15:15,250 - #41 )
INFO  16:15:15,250 - #43 ;
INFO  16:15:15,250 - #36 print
INFO  16:15:15,250 - #26 (
INFO  16:15:15,250 - #47 eol
INFO  16:15:15,250 - #41 )
INFO  16:15:15,250 - #43 ;
INFO  16:15:15,251 - #36 print
INFO  16:15:15,251 - #26 (
INFO  16:15:15,251 - #47 sum
INFO  16:15:15,251 - #26 (
INFO  16:15:15,251 - #47 sum
INFO  16:15:15,251 - #26 (
INFO  16:15:15,251 - #47 niz
INFO  16:15:15,251 - #28 [
INFO  16:15:15,251 - #48 0
INFO  16:15:15,251 - #42 ]
INFO  16:15:15,251 - #8 ,
INFO  16:15:15,251 - #47 niz
INFO  16:15:15,251 - #28 [
INFO  16:15:15,251 - #48 1
INFO  16:15:15,251 - #42 ]
INFO  16:15:15,251 - #41 )
INFO  16:15:15,251 - #8 ,
INFO  16:15:15,251 - #47 niz
INFO  16:15:15,251 - #28 [
INFO  16:15:15,251 - #48 2
INFO  16:15:15,251 - #42 ]
INFO  16:15:15,251 - #41 )
INFO  16:15:15,251 - #41 )
INFO  16:15:15,251 - #43 ;
INFO  16:15:15,251 - #36 print
INFO  16:15:15,251 - #26 (
INFO  16:15:15,251 - #47 eol
INFO  16:15:15,251 - #41 )
INFO  16:15:15,251 - #43 ;
INFO  16:15:15,251 - #36 print
INFO  16:15:15,251 - #26 (
INFO  16:15:15,252 - #47 inkrement
INFO  16:15:15,252 - #26 (
INFO  16:15:15,252 - #47 niz
INFO  16:15:15,252 - #28 [
INFO  16:15:15,252 - #48 2
INFO  16:15:15,252 - #42 ]
INFO  16:15:15,252 - #8 ,
INFO  16:15:15,252 - #48 2
INFO  16:15:15,252 - #41 )
INFO  16:15:15,252 - #41 )
INFO  16:15:15,252 - #43 ;
INFO  16:15:15,252 - #47 a
INFO  16:15:15,252 - #4 =
INFO  16:15:15,252 - #48 3
INFO  16:15:15,252 - #43 ;
INFO  16:15:15,252 - #47 i
INFO  16:15:15,252 - #4 =
INFO  16:15:15,252 - #48 0
INFO  16:15:15,252 - #43 ;
INFO  16:15:15,252 - #46 while
INFO  16:15:15,252 - #26 (
INFO  16:15:15,252 - #47 i
INFO  16:15:15,252 - #27 <
INFO  16:15:15,252 - #48 3
INFO  16:15:15,252 - #41 )
INFO  16:15:15,252 - #25 {
INFO  16:15:15,252 - #47 niz
INFO  16:15:15,252 - #28 [
INFO  16:15:15,252 - #47 i
INFO  16:15:15,252 - #42 ]
INFO  16:15:15,252 - #4 =
INFO  16:15:15,252 - #47 niz
INFO  16:15:15,252 - #28 [
INFO  16:15:15,252 - #47 i
INFO  16:15:15,252 - #42 ]
INFO  16:15:15,253 - #31 *
INFO  16:15:15,253 - #48 2
INFO  16:15:15,253 - #31 *
INFO  16:15:15,253 - #47 a
INFO  16:15:15,253 - #43 ;
INFO  16:15:15,253 - #47 i
INFO  16:15:15,253 - #23 ++
INFO  16:15:15,253 - #43 ;
INFO  16:15:15,253 - #38 }
INFO  16:15:15,253 - #47 niz
INFO  16:15:15,253 - #14 .
INFO  16:15:15,253 - #18 foreach
ERROR 16:15:15,253 - 
Sintaksna greska na liniji 92
ERROR 16:15:15,253 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 92
