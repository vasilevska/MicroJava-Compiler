INFO  14:57:06,912 - Compiling source file: D:\faks\PP1\MJCompiler\test\program.mj
INFO  14:57:06,952 - #37 program
INFO  14:57:06,952 - #47 MJProgram
INFO  14:57:06,953 - #47 int
INFO  14:57:06,954 - #47 x
INFO  14:57:06,955 - #28 [
INFO  14:57:06,955 - #42 ]
INFO  14:57:06,955 - #8 ,
INFO  14:57:06,956 - #47 y
INFO  14:57:06,956 - #28 [
INFO  14:57:06,956 - #42 ]
INFO  14:57:06,956 - #8 ,
INFO  14:57:06,957 - #47 c
INFO  14:57:06,957 - #43 ;
INFO  14:57:06,957 - #9 const
INFO  14:57:06,958 - #47 char
INFO  14:57:06,958 - #47 l
INFO  14:57:06,958 - #4 =
INFO  14:57:06,958 - #49 true
INFO  14:57:06,959 - #43 ;
INFO  14:57:06,960 - #25 {
INFO  14:57:06,960 - #47 int
INFO  14:57:06,961 - #47 k
INFO  14:57:06,961 - #26 (
INFO  14:57:06,961 - #47 int
INFO  14:57:06,962 - #47 f
INFO  14:57:06,962 - #28 [
INFO  14:57:06,962 - #42 ]
INFO  14:57:06,962 - #8 ,
INFO  14:57:06,962 - #47 bool
INFO  14:57:06,962 - #47 c
INFO  14:57:06,962 - #8 ,
INFO  14:57:06,962 - #47 char
INFO  14:57:06,962 - #47 k
INFO  14:57:06,963 - #28 [
INFO  14:57:06,963 - #42 ]
INFO  14:57:06,963 - #41 )
INFO  14:57:06,964 - #47 int
INFO  14:57:06,964 - #47 c
INFO  14:57:06,965 - #43 ;
INFO  14:57:06,965 - #25 {
INFO  14:57:06,965 - #5 break
INFO  14:57:06,965 - #43 ;
INFO  14:57:06,965 - #38 }
INFO  14:57:06,966 - #47 int
INFO  14:57:06,967 - #47 main
INFO  14:57:06,967 - #26 (
INFO  14:57:06,967 - #41 )
INFO  14:57:06,968 - #25 {
INFO  14:57:06,968 - #39 read
INFO  14:57:06,968 - #26 (
INFO  14:57:06,968 - #47 c
INFO  14:57:06,968 - #14 .
INFO  14:57:06,969 - #47 k
INFO  14:57:06,969 - #28 [
INFO  14:57:06,969 - #48 6
INFO  14:57:06,969 - #31 *
INFO  14:57:06,970 - #48 2
INFO  14:57:06,971 - #12 /
INFO  14:57:06,972 - #48 4
INFO  14:57:06,972 - #30 %
INFO  14:57:06,972 - #48 3
INFO  14:57:06,973 - #42 ]
INFO  14:57:06,975 - #41 )
INFO  14:57:06,975 - #43 ;
INFO  14:57:06,975 - #21 if
INFO  14:57:06,976 - #26 (
INFO  14:57:06,976 - #48 3
INFO  14:57:06,976 - #19 >
INFO  14:57:06,976 - #48 2
INFO  14:57:06,977 - #3 &&
INFO  14:57:06,978 - #48 3
INFO  14:57:06,978 - #16 ==
INFO  14:57:06,978 - #48 4
INFO  14:57:06,978 - #35 ||
INFO  14:57:06,980 - #48 3
INFO  14:57:06,980 - #41 )
INFO  14:57:06,981 - #10 continue
INFO  14:57:06,981 - #43 ;
INFO  14:57:06,981 - #15 else
INFO  14:57:06,981 - #5 break
INFO  14:57:06,981 - #43 ;
INFO  14:57:06,982 - #38 }
INFO  14:57:06,982 - #38 }
INFO  14:57:06,986 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclsConst(
    DeclsVar(
      NoDecl(
      ) [NoDecl]
      VarDecl(
        Type(
         int
        ) [Type]
       x
        ArrayBrackets(
        ) [ArrayBrackets]
        ArrayVar(
          ArrayVar(
            NotIdentArray(
            ) [NotIdentArray]
           y
            ArrayBrackets(
            ) [ArrayBrackets]
          ) [ArrayVar]
         c
          NotArray(
          ) [NotArray]
        ) [ArrayVar]
      ) [VarDecl]
    ) [DeclsVar]
    ConstDecl(
      Type(
       char
      ) [Type]
      AssignConst(
       l
        Assignop(
        ) [Assignop]
        BoolConst(
         true
        ) [BoolConst]
      ) [AssignConst]
      NoRepeatConst(
      ) [NoRepeatConst]
    ) [ConstDecl]
  ) [DeclsConst]
  MethDecls(
    MethDecls(
      NoMethDecl(
      ) [NoMethDecl]
      MethodDeclDerived1(
        MethodNameType(
          Type(
           int
          ) [Type]
         k
          OptFormPars(
            FormPars(
              Type(
               int
              ) [Type]
             f
              ArrayBrackets(
              ) [ArrayBrackets]
              ArrayParam(
                ArrayParam(
                  NotParamArray(
                  ) [NotParamArray]
                  Type(
                   bool
                  ) [Type]
                 c
                  NotArray(
                  ) [NotArray]
                ) [ArrayParam]
                Type(
                 char
                ) [Type]
               k
                ArrayBrackets(
                ) [ArrayBrackets]
              ) [ArrayParam]
            ) [FormPars]
          ) [OptFormPars]
        ) [MethodNameType]
        FunctionBodyDerived1(
          VarDecls(
            NoVarDecl(
            ) [NoVarDecl]
            VarDecl(
              Type(
               int
              ) [Type]
             c
              NotArray(
              ) [NotArray]
              NotIdentArray(
              ) [NotIdentArray]
            ) [VarDecl]
          ) [VarDecls]
          Statements(
            NoStatement(
            ) [NoStatement]
            StatementBreak(
            ) [StatementBreak]
          ) [Statements]
        ) [FunctionBodyDerived1]
      ) [MethodDeclDerived1]
    ) [MethDecls]
    MethodDeclDerived1(
      MethodNameType(
        Type(
         int
        ) [Type]
       main
        NoFormPars(
        ) [NoFormPars]
      ) [MethodNameType]
      FunctionBodyDerived1(
        NoVarDecl(
        ) [NoVarDecl]
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            StatementRead(
              Designator(
               c
                DesignExprList(
                  DesignIdentList(
                    NoOptDesignList(
                    ) [NoOptDesignList]
                   k
                  ) [DesignIdentList]
                  ExprBase(
                    Term(
                      FactorNumber(
                       6
                      ) [FactorNumber]
                      MulFactors(
                        MulFactors(
                          MulFactors(
                            NoMulFactor(
                            ) [NoMulFactor]
                            MulOp(
                            ) [MulOp]
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [MulFactors]
                          DivOp(
                          ) [DivOp]
                          FactorNumber(
                           4
                          ) [FactorNumber]
                        ) [MulFactors]
                        ModOp(
                        ) [ModOp]
                        FactorNumber(
                         3
                        ) [FactorNumber]
                      ) [MulFactors]
                    ) [Term]
                    NoAddTerm(
                    ) [NoAddTerm]
                  ) [ExprBase]
                ) [DesignExprList]
              ) [Designator]
            ) [StatementRead]
          ) [Statements]
          StatementIfElse(
            Condition(
              CondTerm(
                CondFactRel(
                  ExprBase(
                    Term(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                      NoMulFactor(
                      ) [NoMulFactor]
                    ) [Term]
                    NoAddTerm(
                    ) [NoAddTerm]
                  ) [ExprBase]
                  GrOp(
                  ) [GrOp]
                  ExprBase(
                    Term(
                      FactorNumber(
                       2
                      ) [FactorNumber]
                      NoMulFactor(
                      ) [NoMulFactor]
                    ) [Term]
                    NoAddTerm(
                    ) [NoAddTerm]
                  ) [ExprBase]
                ) [CondFactRel]
                CondFacts(
                  NoCondFact(
                  ) [NoCondFact]
                  CondFactRel(
                    ExprBase(
                      Term(
                        FactorNumber(
                         3
                        ) [FactorNumber]
                        NoMulFactor(
                        ) [NoMulFactor]
                      ) [Term]
                      NoAddTerm(
                      ) [NoAddTerm]
                    ) [ExprBase]
                    EqOp(
                    ) [EqOp]
                    ExprBase(
                      Term(
                        FactorNumber(
                         4
                        ) [FactorNumber]
                        NoMulFactor(
                        ) [NoMulFactor]
                      ) [Term]
                      NoAddTerm(
                      ) [NoAddTerm]
                    ) [ExprBase]
                  ) [CondFactRel]
                ) [CondFacts]
              ) [CondTerm]
              CondTerms(
                NoCondTerm(
                ) [NoCondTerm]
                CondTerm(
                  CondFactBase(
                    ExprBase(
                      Term(
                        FactorNumber(
                         3
                        ) [FactorNumber]
                        NoMulFactor(
                        ) [NoMulFactor]
                      ) [Term]
                      NoAddTerm(
                      ) [NoAddTerm]
                    ) [ExprBase]
                  ) [CondFactBase]
                  NoCondFact(
                  ) [NoCondFact]
                ) [CondTerm]
              ) [CondTerms]
            ) [Condition]
            StatementContinue(
            ) [StatementContinue]
            Else(
              StatementBreak(
              ) [StatementBreak]
            ) [Else]
          ) [StatementIfElse]
        ) [Statements]
      ) [FunctionBodyDerived1]
    ) [MethodDeclDerived1]
  ) [MethDecls]
) [Program]
INFO  14:57:06,986 - ===================================
