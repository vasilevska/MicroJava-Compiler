// generated with ast extension for cup
// version 0.8
// 6/1/2023 21:0:13


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MethodDecl MethodDecl);
    public void visit(RelOpp RelOpp);
    public void visit(CondTermList CondTermList);
    public void visit(MulOpp MulOpp);
    public void visit(StatementList StatementList);
    public void visit(RepeatConst RepeatConst);
    public void visit(ExtendClass ExtendClass);
    public void visit(AddOpp AddOpp);
    public void visit(Factor Factor);
    public void visit(CondFactList CondFactList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(MethodName MethodName);
    public void visit(MulFactorList MulFactorList);
    public void visit(EmptySqBrackets EmptySqBrackets);
    public void visit(OptionalFormPars OptionalFormPars);
    public void visit(ExprList ExprList);
    public void visit(ConstructorDeclList ConstructorDeclList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FunctionBody FunctionBody);
    public void visit(Expr Expr);
    public void visit(ParamSqList ParamSqList);
    public void visit(OptionalSquareExpr OptionalSquareExpr);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Const Const);
    public void visit(DesignList DesignList);
    public void visit(OptionalClassBody OptionalClassBody);
    public void visit(IdentSqList IdentSqList);
    public void visit(Statement Statement);
    public void visit(OptionalDesignList OptionalDesignList);
    public void visit(AddTermList AddTermList);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptionalElse OptionalElse);
    public void visit(OptionalDesign OptionalDesign);
    public void visit(While While);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDecls VarDecls);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(Term Term);
    public void visit(NoStatement NoStatement);
    public void visit(Statements Statements);
    public void visit(StatementForeach StatementForeach);
    public void visit(StatementBlock StatementBlock);
    public void visit(StatementPrintExprNumber StatementPrintExprNumber);
    public void visit(StatementPrintExpr StatementPrintExpr);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementReturnVoid StatementReturnVoid);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementWhile StatementWhile);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(NoRepeatConst NoRepeatConst);
    public void visit(NewRepeatConst NewRepeatConst);
    public void visit(LsOp LsOp);
    public void visit(GrOp GrOp);
    public void visit(LeqOp LeqOp);
    public void visit(GreOp GreOp);
    public void visit(NeqOp NeqOp);
    public void visit(EqOp EqOp);
    public void visit(ProgName ProgName);
    public void visit(Program Program);
    public void visit(NotParamArray NotParamArray);
    public void visit(ArrayParam ArrayParam);
    public void visit(NoFormPars NoFormPars);
    public void visit(OptFormPars OptFormPars);
    public void visit(NoElse NoElse);
    public void visit(StatementElse StatementElse);
    public void visit(NoDesignatorArr NoDesignatorArr);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(ClassBodyConstrMeth ClassBodyConstrMeth);
    public void visit(ClassBodyMeth ClassBodyMeth);
    public void visit(ClassBodyConstr ClassBodyConstr);
    public void visit(ClassBodyEmpty ClassBodyEmpty);
    public void visit(ModOp ModOp);
    public void visit(DivOp DivOp);
    public void visit(MulOp MulOp);
    public void visit(NoMulFactor NoMulFactor);
    public void visit(MulFactors MulFactors);
    public void visit(MethodNameType MethodNameType);
    public void visit(MethodNameVoid MethodNameVoid);
    public void visit(NoMethDecl NoMethDecl);
    public void visit(MethDecls MethDecls);
    public void visit(MethodDeclDerived1 MethodDeclDerived1);
    public void visit(Else Else);
    public void visit(If If);
    public void visit(NotIdentArray NotIdentArray);
    public void visit(ArrayVar ArrayVar);
    public void visit(FunctionBodyDerived1 FunctionBodyDerived1);
    public void visit(FormPars FormPars);
    public void visit(FEElem FEElem);
    public void visit(FactorParensExpr FactorParensExpr);
    public void visit(FactorNewActPars FactorNewActPars);
    public void visit(FactorNewParen FactorNewParen);
    public void visit(FactorNewSquare FactorNewSquare);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorActPars FactorActPars);
    public void visit(FactorParen FactorParen);
    public void visit(FactorBase FactorBase);
    public void visit(NoParent NoParent);
    public void visit(ParentClass ParentClass);
    public void visit(NoExpr NoExpr);
    public void visit(Exprs Exprs);
    public void visit(ExprSub ExprSub);
    public void visit(ExprBase ExprBase);
    public void visit(NotArray NotArray);
    public void visit(ArrayBrackets ArrayBrackets);
    public void visit(DesignatorStatementListAssign DesignatorStatementListAssign);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementActPars DesignatorStatementActPars);
    public void visit(DesignatorStatementParens DesignatorStatementParens);
    public void visit(DesignatorStatementAssignExpr DesignatorStatementAssignExpr);
    public void visit(DesignatorStatementBase DesignatorStatementBase);
    public void visit(DesignatorClassField DesignatorClassField);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(NoDesignList NoDesignList);
    public void visit(DesignListMulti DesignListMulti);
    public void visit(NoDecl NoDecl);
    public void visit(DeclsClass DeclsClass);
    public void visit(DeclsVar DeclsVar);
    public void visit(DeclsConst DeclsConst);
    public void visit(ConstructorName ConstructorName);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(ConstructorSingleDecl ConstructorSingleDecl);
    public void visit(ConstructorDecls ConstructorDecls);
    public void visit(ConstDecl ConstDecl);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(IntConst IntConst);
    public void visit(Condition Condition);
    public void visit(NoCondTerm NoCondTerm);
    public void visit(CondTerms CondTerms);
    public void visit(CondTerm CondTerm);
    public void visit(NoCondFact NoCondFact);
    public void visit(CondFacts CondFacts);
    public void visit(CondFactRel CondFactRel);
    public void visit(CondFactBase CondFactBase);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(Assignop Assignop);
    public void visit(AssignDesign AssignDesign);
    public void visit(AssignConst AssignConst);
    public void visit(ArrDesignator ArrDesignator);
    public void visit(NoAddTerm NoAddTerm);
    public void visit(AddTerms AddTerms);
    public void visit(SubOp SubOp);
    public void visit(AddOp AddOp);
    public void visit(ActPars ActPars);

}
